[{"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\index.js":"1","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\App.js":"2","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\reportWebVitals.js":"3","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\store\\reducers\\rootReducer.js":"4","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\NavBar.js":"5","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Login\\Login.js":"6","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Incidents\\IncidentLisiting.js":"7","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Users\\AddUser.js":"8","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Users\\UsersList.js":"9","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\signalR\\Receiver.js":"10","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Incidents\\IncidentDetails.js":"11","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Incidents\\AddNew.js":"12","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Incidents\\Dashboard\\Dashboard.js":"13","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\store\\reducers\\usersReducer.js":"14","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\store\\reducers\\incidentsReducer.js":"15","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\store\\reducers\\userLoginReducer.js":"16","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\store\\reducers\\notificationsReducer.js":"17","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\store\\reducers\\dashboardReducer.js":"18","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Notifications.js":"19","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Pages.js":"20","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Incidents\\Incident.js":"21","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\PageActions.js":"22","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Users\\User.js":"23","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Incidents\\Comments.js":"24","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Incidents\\AssigneeDropdown.js":"25","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Incidents\\Dashboard\\OldestOpen.js":"26","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Incidents\\Dashboard\\MostAssignedByUser.js":"27","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Incidents\\Dashboard\\DayByDayCount.js":"28","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Incidents\\Dashboard\\LastFive.js":"29","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Incidents\\Dashboard\\OverallWidget.js":"30","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Incidents\\Dashboard\\KPIBar.js":"31","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\store\\actions\\userLoginActions.js":"32","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\store\\actions\\usersActions.js":"33","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\store\\actions\\incidentsActions.js":"34","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\store\\actions\\notificationsActions.js":"35","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\api\\apiURLs.js":"36","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Incidents\\Comment.js":"37","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\store\\actions\\dashboardActions.js":"38","D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\signalR\\sender.js":"39","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\index.js":"40","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\reportWebVitals.js":"41","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\App.js":"42","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\store\\reducers\\rootReducer.js":"43","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\NavBar.js":"44","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Login\\Login.js":"45","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Incidents\\IncidentDetails.js":"46","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Incidents\\IncidentLisiting.js":"47","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Users\\UsersList.js":"48","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Incidents\\AddNew.js":"49","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Users\\AddUser.js":"50","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\signalR\\Receiver.js":"51","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Incidents\\Dashboard\\Dashboard.js":"52","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\store\\reducers\\usersReducer.js":"53","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\store\\reducers\\userLoginReducer.js":"54","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\store\\reducers\\notificationsReducer.js":"55","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\store\\reducers\\incidentsReducer.js":"56","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\store\\reducers\\dashboardReducer.js":"57","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Notifications.js":"58","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\PageActions.js":"59","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Incidents\\Comments.js":"60","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Incidents\\AssigneeDropdown.js":"61","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Incidents\\Incident.js":"62","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Pages.js":"63","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Users\\User.js":"64","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Incidents\\Dashboard\\OldestOpen.js":"65","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Incidents\\Dashboard\\DayByDayCount.js":"66","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Incidents\\Dashboard\\MostAssignedByUser.js":"67","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Incidents\\Dashboard\\LastFive.js":"68","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Incidents\\Dashboard\\OverallWidget.js":"69","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Incidents\\Dashboard\\KPIBar.js":"70","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\store\\actions\\userLoginActions.js":"71","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\store\\actions\\incidentsActions.js":"72","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\store\\actions\\usersActions.js":"73","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\store\\actions\\notificationsActions.js":"74","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\api\\apiURLs.js":"75","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Incidents\\Comment.js":"76","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\store\\actions\\dashboardActions.js":"77","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\signalR\\sender.js":"78"},{"size":1161,"mtime":1636820480426,"results":"79","hashOfConfig":"80"},{"size":1600,"mtime":1636820480416,"results":"81","hashOfConfig":"80"},{"size":375,"mtime":1636820480426,"results":"82","hashOfConfig":"80"},{"size":557,"mtime":1636820480431,"results":"83","hashOfConfig":"80"},{"size":3361,"mtime":1636820480423,"results":"84","hashOfConfig":"80"},{"size":2730,"mtime":1636820480423,"results":"85","hashOfConfig":"80"},{"size":4911,"mtime":1636820480422,"results":"86","hashOfConfig":"80"},{"size":6484,"mtime":1636820480424,"results":"87","hashOfConfig":"80"},{"size":3922,"mtime":1636820480425,"results":"88","hashOfConfig":"80"},{"size":1702,"mtime":1660137910587,"results":"89","hashOfConfig":"80"},{"size":25631,"mtime":1636820480422,"results":"90","hashOfConfig":"80"},{"size":13191,"mtime":1636820480418,"results":"91","hashOfConfig":"80"},{"size":935,"mtime":1636820480419,"results":"92","hashOfConfig":"80"},{"size":839,"mtime":1636820480432,"results":"93","hashOfConfig":"80"},{"size":4721,"mtime":1636820480431,"results":"94","hashOfConfig":"80"},{"size":1127,"mtime":1636820480431,"results":"95","hashOfConfig":"80"},{"size":1209,"mtime":1636820480431,"results":"96","hashOfConfig":"80"},{"size":1213,"mtime":1636820480430,"results":"97","hashOfConfig":"80"},{"size":5101,"mtime":1636820480423,"results":"98","hashOfConfig":"80"},{"size":3036,"mtime":1636820480424,"results":"99","hashOfConfig":"80"},{"size":2456,"mtime":1636820480420,"results":"100","hashOfConfig":"80"},{"size":1130,"mtime":1636820480424,"results":"101","hashOfConfig":"80"},{"size":390,"mtime":1636820480425,"results":"102","hashOfConfig":"80"},{"size":3750,"mtime":1636820480418,"results":"103","hashOfConfig":"80"},{"size":4615,"mtime":1636820480418,"results":"104","hashOfConfig":"80"},{"size":2574,"mtime":1636820480420,"results":"105","hashOfConfig":"80"},{"size":2869,"mtime":1636820480420,"results":"106","hashOfConfig":"80"},{"size":2089,"mtime":1636820480419,"results":"107","hashOfConfig":"80"},{"size":2447,"mtime":1636820480419,"results":"108","hashOfConfig":"80"},{"size":2541,"mtime":1636820480420,"results":"109","hashOfConfig":"80"},{"size":1637,"mtime":1636820480419,"results":"110","hashOfConfig":"80"},{"size":2117,"mtime":1636820480429,"results":"111","hashOfConfig":"80"},{"size":1875,"mtime":1636820480429,"results":"112","hashOfConfig":"80"},{"size":7378,"mtime":1636820480428,"results":"113","hashOfConfig":"80"},{"size":1537,"mtime":1636820480429,"results":"114","hashOfConfig":"80"},{"size":1578,"mtime":1660137604738,"results":"115","hashOfConfig":"80"},{"size":5410,"mtime":1636820480418,"results":"116","hashOfConfig":"80"},{"size":3032,"mtime":1636820480428,"results":"117","hashOfConfig":"80"},{"size":1919,"mtime":1660137821423,"results":"118","hashOfConfig":"80"},{"size":1161,"mtime":1660138833870,"results":"119","hashOfConfig":"120"},{"size":375,"mtime":1660138833870,"results":"121","hashOfConfig":"120"},{"size":1600,"mtime":1660138833863,"results":"122","hashOfConfig":"120"},{"size":557,"mtime":1660138833873,"results":"123","hashOfConfig":"120"},{"size":3461,"mtime":1660586323920,"results":"124","hashOfConfig":"120"},{"size":3099,"mtime":1660591620984,"results":"125","hashOfConfig":"120"},{"size":25631,"mtime":1660138833867,"results":"126","hashOfConfig":"120"},{"size":4921,"mtime":1660591019606,"results":"127","hashOfConfig":"120"},{"size":3924,"mtime":1660591267240,"results":"128","hashOfConfig":"120"},{"size":13191,"mtime":1660138833864,"results":"129","hashOfConfig":"120"},{"size":6484,"mtime":1660138833869,"results":"130","hashOfConfig":"120"},{"size":1702,"mtime":1660138833870,"results":"131","hashOfConfig":"120"},{"size":935,"mtime":1660138833865,"results":"132","hashOfConfig":"120"},{"size":839,"mtime":1660138833874,"results":"133","hashOfConfig":"120"},{"size":1127,"mtime":1660138833874,"results":"134","hashOfConfig":"120"},{"size":1209,"mtime":1660138833873,"results":"135","hashOfConfig":"120"},{"size":4721,"mtime":1660138833873,"results":"136","hashOfConfig":"120"},{"size":1213,"mtime":1660138833873,"results":"137","hashOfConfig":"120"},{"size":5118,"mtime":1660586679495,"results":"138","hashOfConfig":"120"},{"size":1130,"mtime":1660587345002,"results":"139","hashOfConfig":"120"},{"size":3750,"mtime":1660138833865,"results":"140","hashOfConfig":"120"},{"size":4615,"mtime":1660138833864,"results":"141","hashOfConfig":"120"},{"size":2456,"mtime":1660138833867,"results":"142","hashOfConfig":"120"},{"size":4453,"mtime":1660590873142,"results":"143","hashOfConfig":"120"},{"size":390,"mtime":1660138833869,"results":"144","hashOfConfig":"120"},{"size":2574,"mtime":1660138833866,"results":"145","hashOfConfig":"120"},{"size":2089,"mtime":1660138833865,"results":"146","hashOfConfig":"120"},{"size":2871,"mtime":1660587549868,"results":"147","hashOfConfig":"120"},{"size":2447,"mtime":1660138833866,"results":"148","hashOfConfig":"120"},{"size":3949,"mtime":1660585967611,"results":"149","hashOfConfig":"120"},{"size":1635,"mtime":1660585851596,"results":"150","hashOfConfig":"120"},{"size":2117,"mtime":1660138833872,"results":"151","hashOfConfig":"120"},{"size":7378,"mtime":1660138833872,"results":"152","hashOfConfig":"120"},{"size":1875,"mtime":1660138833872,"results":"153","hashOfConfig":"120"},{"size":1537,"mtime":1660138833872,"results":"154","hashOfConfig":"120"},{"size":1590,"mtime":1660138942754,"results":"155","hashOfConfig":"120"},{"size":5410,"mtime":1660138833865,"results":"156","hashOfConfig":"120"},{"size":3032,"mtime":1660138833871,"results":"157","hashOfConfig":"120"},{"size":405,"mtime":1660139983913,"results":"158","hashOfConfig":"120"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x9tlqn",{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},"1bcc45a",{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"239"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"239"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"239"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"239"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"239"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"239"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"239"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"239"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"239"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"239"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"239"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"239"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"239"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"239"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"239"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"239"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"239"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"239"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"239"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\index.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\App.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\reportWebVitals.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\store\\reducers\\rootReducer.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\NavBar.js",["335","336","337","338"],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Login\\Login.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Incidents\\IncidentLisiting.js",["339","340"],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Users\\AddUser.js",["341","342"],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Users\\UsersList.js",["343"],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\signalR\\Receiver.js",["344"],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Incidents\\IncidentDetails.js",["345","346","347","348","349"],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Incidents\\AddNew.js",["350"],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Incidents\\Dashboard\\Dashboard.js",["351"],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\store\\reducers\\usersReducer.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\store\\reducers\\incidentsReducer.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\store\\reducers\\userLoginReducer.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\store\\reducers\\notificationsReducer.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\store\\reducers\\dashboardReducer.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Notifications.js",["352"],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Pages.js",["353","354"],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Incidents\\Incident.js",["355"],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\PageActions.js",["356","357","358"],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Users\\User.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Incidents\\Comments.js",["359","360","361","362"],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Incidents\\AssigneeDropdown.js",["363","364"],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Incidents\\Dashboard\\OldestOpen.js",["365","366","367"],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Incidents\\Dashboard\\MostAssignedByUser.js",["368","369"],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Incidents\\Dashboard\\DayByDayCount.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Incidents\\Dashboard\\LastFive.js",["370","371","372"],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Incidents\\Dashboard\\OverallWidget.js",["373"],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Incidents\\Dashboard\\KPIBar.js",["374","375"],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\store\\actions\\userLoginActions.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\store\\actions\\usersActions.js",["376"],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\store\\actions\\incidentsActions.js",["377","378"],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\store\\actions\\notificationsActions.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\api\\apiURLs.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\components\\Incidents\\Comment.js",["379","380","381","382","383","384"],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\store\\actions\\dashboardActions.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_Stack\\IM_MERN_React\\src\\signalR\\sender.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\index.js",[],["385","386"],"D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\reportWebVitals.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\App.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\store\\reducers\\rootReducer.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\NavBar.js",["387","388","389","390"],"import {React} from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport '../styles/Navbar.css';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Notifications from './Notifications';\r\nimport { signOut } from \"../store/actions/userLoginActions\";\r\nimport logo from '../images/logo-white.png'\r\n\r\n\r\nfunction NavBar({user_Name, loginError, token, signOut}) {\r\n\r\n  if (!token){\r\n    alert(\"Your session has been expired. Please login again.\")\r\n    return <Redirect to='/' /> \r\n  } \r\n  // if (loginError) return <Redirect to='/' /> \r\n   \r\n    return (\r\n      <nav className=\"nav-wrapper theme-color-background\">\r\n        <div className=\"container\">\r\n          <div className=\"left\">\r\n          <NavLink to=\"/dashboard\" className=\"brand-logo\">             \r\n            <img src={logo} />\r\n          </NavLink>\r\n          </div>\r\n          <a href=\"#\" className=\"sidenav-trigger\" data-target=\"mobile-menu\">\r\n            <i className=\"material-icons\">menu</i>\r\n          </a>\r\n          <ul className=\"right hide-on-med-and-down\">\r\n            <li>     \r\n              <NavLink to=\"/incidentListing\" >             \r\n                 Incidents\r\n              </NavLink> \r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/UsersList\" >             \r\n                   Users \r\n                </NavLink>              \r\n            </li>            \r\n            {/* <li onClick={()=> commentSent(\"Hi please work.\")}>              */}\r\n           \r\n              <Notifications />\r\n            <li>\r\n                <button type=\"button\" title={user_Name} className=\"btn-floating  blue darken-3 userWelcome\" >\r\n                  {user_Name.split(/\\s/).reduce((response,word)=> response+=word.slice(0,1),'')} \r\n                 </button>\r\n            </li>\r\n            <li className=\" singout-btn\">\r\n             <a> <i className=\"material-icons\" onClick={signOut}>settings_power</i> </a>\r\n            </li>\r\n          </ul>\r\n          {/* for mobile */}\r\n          <ul className=\"sidenav theme-color-background \" id=\"mobile-menu\">\r\n            <li>\r\n              <NavLink to=\"/incidentListing\"  className=\"sidenav-close white-text\">             \r\n                  Incidents\r\n                </NavLink>               \r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/UsersList\" className=\"sidenav-close white-text\">             \r\n                       Users\r\n                  </NavLink>            \r\n            </li>\r\n            <li>\r\n                 <a> <i className=\"material-icons white-text\" onClick={signOut}>settings_power</i> </a>        \r\n            </li>\r\n            \r\n            {/* <li>\r\n              <a href=\"\" className=\" white-text\">\r\n                <i className=\"material-icons\">notifications</i>\r\n                <span className=\"Indigo-text\">5</span>\r\n              </a>\r\n             \r\n            </li> */}\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {        \r\n  return{      \r\n      user_Name :state.userLogin.user_Name, // Logged in User's name\r\n      userId :state.userLogin.userId,  // logged in User Id      \r\n      loginError : state.userLogin.loginError,\r\n      token : state.userLogin.token   \r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n \r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\r\n","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Login\\Login.js",["391","392"],"D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Incidents\\IncidentDetails.js",["393","394","395","396","397"],"import { React, useEffect, useState, useRef } from \"react\";\r\nimport PageActions from \"../PageActions\";\r\nimport M from \"materialize-css\";\r\nimport { connect } from \"react-redux\";\r\nimport { allUsers } from \"../../store/actions/usersActions\";\r\nimport { getIncidentById, updateIncident, deleteAttachment } from \"../../store/actions/incidentsActions\";\r\nimport Comments from \"./Comments\";\r\nimport  AssigneeDropdown  from \"./AssigneeDropdown\";\r\nimport \"../../styles/incidentDetails.css\";\r\nimport moment from \"moment\";\r\nimport { incidentsUrls } from \"../../api/apiURLs\";\r\n\r\nfunction IncidentDetails({\r\n  match,\r\n  incidentData,\r\n  getIncidentById,\r\n  allAssignees,\r\n  getAllAssignees,\r\n  userId,\r\n  updateIncident,\r\n  deleteAttachment,\r\n  IncidentDetailError\r\n  \r\n}) {\r\n \r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [additionalDetails, setAdditionalDetails] = useState(\"\"); \r\n  const [assignee, setAssignee] = useState(null);\r\n  const [status, setStatus] = useState('N');\r\n  const [dueDate, setDueDate] = useState('');\r\n  const [startTime, setStartTime] = useState('');\r\n  \r\n  const [assigneeName, setAssigneeName] = useState(\"\");  \r\n\r\n  const [editTitle, setEditTitle] = useState(false);\r\n  const [editDescription, setEditDescription] = useState(false);\r\n  const [editAdditionalDetails, setEditAdditionalDetails] = useState(false);\r\n  const [editDueDate, setEditDueDate] = useState(false);\r\n  const [editStartDate, setEditStartDate] = useState(false);\r\n  \r\n  const statusRef = useRef();\r\n  const dueDateTimeRef= useRef();\r\n  const dueDateDateRef= useRef();\r\n  const startTimeTimeRef = useRef();\r\n  const startTimeDateRef = useRef();\r\n\r\n  useEffect(() => {\r\n    setMaterializeCSS();\r\n  }, [incidentData]);\r\n\r\n  useEffect(() => {    \r\n    getIncidentById(match.params.id);   \r\n  }, [match.params.id]); // whenever Id changes get new\r\n\r\n  useEffect(() => {  // To update Fields\r\n    if(incidentData){\r\n      setTitle(incidentData.Title);\r\n      setDescription(incidentData.Description);\r\n      setAdditionalDetails(incidentData.AdditionalData); \r\n      let currentAssignee =  allAssignees.find((assignee) => {\r\n        return assignee._id === incidentData.AssignedTo;\r\n      });\r\n      setAssigneeName(currentAssignee.FirstName + \" \" + currentAssignee.LastName);  \r\n      setStatus(incidentData.Status);\r\n      setDueDate(incidentData.DueDate);\r\n      setStartTime(incidentData.StartTime);\r\n    }\r\n  }, [incidentData]);\r\n\r\n  const setMaterializeCSS = () => { \r\n    M.FormSelect.init(statusRef.current);\r\n    M.Datepicker.init(startTimeDateRef.current);\r\n    M.Timepicker.init(startTimeTimeRef.current);\r\n    M.Datepicker.init(dueDateDateRef.current);\r\n    M.Timepicker.init(dueDateTimeRef.current);\r\n  }\r\n\r\n  const getNameById = (id) => {   \r\n    let user = allAssignees.find((assignee) => {\r\n      return assignee._id === id;\r\n    });   \r\n    if(!user){    \r\n      return id;\r\n    }\r\n    return user.FirstName + \" \" + user.LastName\r\n  }\r\n \r\n  const downloadFile = (file) => {\r\n    console.log(file);\r\n    window.open(\r\n          incidentsUrls.downloadFileUrl\r\n           + \"type=incident\"\r\n           + \"&commentId=\" + \"\" \r\n           + \"&incidentId=\" + incidentData._id\r\n           + \"&filename=\" + file.FileName\r\n           + \"&contentType=\" + file.ContentType\r\n    ); \r\n  }\r\n\r\n  const titleEditClick = () =>{\r\n    setEditTitle(!editTitle);\r\n    setTitle(incidentData.Title);\r\n  }\r\n  const titleEditCancel = () =>{\r\n    setTitle(incidentData.Title);\r\n    setEditTitle(false);\r\n  }\r\n\r\n  const titleEditSave = () =>{\r\n    if(title.trim() === \"\"){\r\n      alert(\"Title cannot be empty.\");\r\n      setTitle(incidentData.Title);\r\n      return;\r\n    }\r\n    updateIncidentByField(\"Title\" , title.trim());\r\n    setEditTitle(false);\r\n  }\r\n\r\n  const descriptionEditClick = () =>{\r\n    setEditDescription(!editDescription);\r\n    setDescription(incidentData.Description);\r\n   \r\n  }\r\n  const descriptionEditCancel = () =>{\r\n    setDescription(incidentData.Description);\r\n    setEditDescription(false);\r\n  }\r\n\r\n  const descriptionEditSave = () =>{\r\n    if(description.trim() === \"\"){\r\n      alert(\"Description cannot be empty.\");\r\n      setDescription(incidentData.Description);\r\n      return;\r\n    }\r\n    updateIncidentByField(\"Description\" , description.trim());\r\n    setEditDescription(false);\r\n  }\r\n\r\n  const additionalDetailsEditClick = () =>{\r\n    setEditAdditionalDetails(!editAdditionalDetails);\r\n    setAdditionalDetails(incidentData.AdditionalData);\r\n  }\r\n  const additionalDetailsEditCancel = () =>{\r\n    setAdditionalDetails(incidentData.AdditionalData);\r\n    setEditAdditionalDetails(false);\r\n  }\r\n\r\n  const additionalDetailsEditSave = () =>{\r\n    updateIncidentByField(\"AdditionalData\" , additionalDetails.trim());\r\n    setEditAdditionalDetails(false);    \r\n  }\r\n\r\n  const dueDateEditClick = () =>{\r\n    setEditDueDate(!editDueDate);\r\n    setMaterializeCSS();\r\n  }\r\n  const dueDateEditCancel = () =>{\r\n    setEditDueDate(false);\r\n  }\r\n\r\n  const dueDateEditSave = () =>{    \r\n    if ( dueDateDateRef.current.value === \"\" ||  dueDateTimeRef.current.value === \"\" ) {\r\n      alert(\"Please select date and time.\");\r\n      setEditDueDate(false);\r\n      return;\r\n    } \r\n\r\n    let dueDateTemp  = new Date( dueDateDateRef.current.value + \" \" + dueDateTimeRef.current.value);\r\n    dueDateTemp = (dueDateTemp.getMonth() + 1) + \"/\" + dueDateTemp.getDate() + \"/\" +  dueDateTemp.getFullYear() \r\n                + \" \" + dueDateTemp.getHours() + \":\" + dueDateTemp.getMinutes() + \":\" + dueDateTemp.getSeconds(); \r\n      updateIncidentByField(\"DueDate\" , dueDateTemp);     \r\n      setEditDueDate(false);\r\n      setDueDate(dueDateTemp);\r\n   }\r\n\r\n  const startDateEditClick = () =>{\r\n    setEditStartDate(!editStartDate);\r\n    setMaterializeCSS();\r\n  }\r\n  const startDateEditCancel = () =>{\r\n    setEditStartDate(false);\r\n  }\r\n\r\n  const startDateEditSave = () =>{\r\n  \r\n   if ( startTimeDateRef.current.value === \"\" ||  startTimeTimeRef.current.value === \"\" ) {\r\n    alert(\"Please select date and time.\");\r\n    setEditStartDate(false);\r\n    return;\r\n  } \r\n\r\n  let startTimeTemp  = new Date( startTimeDateRef.current.value + \" \" + startTimeTimeRef.current.value);\r\n  startTimeTemp = (startTimeTemp.getMonth() + 1) + \"/\" + startTimeTemp.getDate() + \"/\" +  startTimeTemp.getFullYear() \r\n                + \" \" + startTimeTemp.getHours() + \":\" + startTimeTemp.getMinutes() + \":\" + startTimeTemp.getSeconds();  \r\n    updateIncidentByField(\"StartTime\" , startTimeTemp);   \r\n    setEditStartDate(false); \r\n    setStartTime(startTimeTemp);  \r\n  }\r\n\r\n  const updateIncidentByField = (field , value) => {    \r\n    let parameters = {\r\n      IncidentId : incidentData._id,\r\n      Parameter : field,\r\n      Value : value,\r\n      UserId : userId\r\n    };\r\n    console.log(parameters);\r\n    updateIncident(parameters); // Calling action here\r\n  }\r\n\r\n  const statusChanged = (e) => {\r\n    setStatus(e.target.value);\r\n    updateIncidentByField(\"Status\" , e.target.value);\r\n  }\r\n\r\n  const deleteIncidentAttachment = (file) => {        \r\n    if(window.confirm(\"Are you sure you want to delete this attachment.\" + file.FileName)){\r\n      deleteAttachment(\"incicent\" , userId, incidentData._id , file);\r\n    }      \r\n   }\r\n\r\n   if(IncidentDetailError !== \"\"){\r\n    return (\r\n      <div className=\"container\">\r\n        <h1 className=\"center red-text\">Error</h1>\r\n        <h5 className=\"center\">{IncidentDetailError}</h5>\r\n        <p className=\"center\">Please check your network and try loging back.</p>\r\n      </div>\r\n    )\r\n   }\r\n\r\n  if (!incidentData || !allAssignees) {    \r\n    return  ( \r\n     \r\n              <div class=\"preloader-wrapper container big active page-loader\">\r\n                <div class=\"spinner-layer spinner-blue-only\">\r\n                  <div class=\"circle-clipper left\">\r\n                    <div class=\"circle\"></div>\r\n                  </div><div class=\"gap-patch\">\r\n                    <div class=\"circle\"></div>\r\n                  </div><div class=\"circle-clipper right\">\r\n                    <div class=\"circle\"></div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n          );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <link rel=\"stylesheet\" href=\"./Styles/incidentDetails.css\"></link>\r\n      <PageActions Title={\"Incident Details\"} />\r\n      <section>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col s12 l12 \">\r\n              <div className=\"row\">\r\n                <div className=\"col s9\">\r\n                  {!editTitle ? (\r\n                    <h5 className=\"left indigo-text darken-4\">\r\n                      {\" \"}\r\n                      {/* Title  */}\r\n                      {title}\r\n                      <i\r\n                        className=\"material-icons actions-icon\"\r\n                        onClick={titleEditClick}\r\n                      >\r\n                        edit\r\n                      </i>\r\n                    </h5>\r\n                  ) : (\r\n                    <div className=\"input-field\">\r\n                      {\" \"}\r\n                      {/* Title Edit */}\r\n                      <input\r\n                        type=\"text\"\r\n                        value={title}\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                      />\r\n                      <button\r\n                        title=\"Save\"\r\n                        className=\"btn green darken-2 right updateBtn\"\r\n                        onClick={titleEditSave}\r\n                      >\r\n                        <i className=\"actions-icon material-icons\">check</i>\r\n                      </button>\r\n                      <button\r\n                        title=\"Cancel\"\r\n                        className=\"btn yellow darken-2 right updateBtn\"\r\n                        onClick={titleEditCancel}\r\n                      >\r\n                        <i className=\"actions-icon material-icons\">cancel</i>\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"col s3\">\r\n                  {\" \"}\r\n                  {/* IM Major Action Edit */}\r\n                  <h5>\r\n                    {\" \"}\r\n                    <span\r\n                      className=\"im-createTime black-text \"\r\n                      title={moment(new Date(incidentData.createdAt)).format(\r\n                        \"MMMM DD YYYY, h:mm:ss a\"\r\n                      )}\r\n                    >\r\n                      Created by{\" \"}\r\n                      <a className=\"username\">\r\n                        {\" \"}\r\n                        {getNameById(incidentData.CreatedBy)}{\" \"}\r\n                      </a>{\" \"}\r\n                      - {moment(new Date(incidentData.createdAt)).fromNow()}\r\n                    </span>\r\n                  </h5>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"col s12 l6\">\r\n                  <p className=\"heading left-align indigo-text darken-4\">\r\n                    {\" \"}\r\n                    {/* Description  */}\r\n                    Description :\r\n                    <i\r\n                      className=\"inline-icon material-icons actions-icon\"\r\n                      onClick={descriptionEditClick}\r\n                    >\r\n                      edit\r\n                    </i>\r\n                  </p>\r\n                  {!editDescription ? (\r\n                    <>\r\n                      <div className=\"input-field\">\r\n                        <p className=\"darkslategrayText bigTextScroll\">\r\n                          {description}\r\n                        </p>\r\n                      </div>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <div className=\"input-field\">\r\n                        {\" \"}\r\n                        {/* Description Edit */}\r\n                        <textarea\r\n                          id=\"description\"\r\n                          className=\"materialize-textarea\"\r\n                          value={description}\r\n                          onChange={(e) => setDescription(e.target.value)}\r\n                        ></textarea>\r\n                        <button\r\n                          title=\"Save\"\r\n                          className=\"btn green darken-2 right updateBtn\"\r\n                          onClick={descriptionEditSave}\r\n                        >\r\n                          <i className=\"actions-icon material-icons\">check</i>\r\n                        </button>\r\n                        <button\r\n                          title=\"Cancel\"\r\n                          className=\"btn yellow darken-2 right updateBtn\"\r\n                          onClick={descriptionEditCancel}\r\n                        >\r\n                          <i className=\"actions-icon material-icons\">cancel</i>\r\n                        </button>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                  <p className=\"heading left-align indigo-text darken-4\">\r\n                    {\" \"}\r\n                    {/*   Additional Details */}\r\n                    Additional Details :\r\n                    <i\r\n                      className=\"inline-icon material-icons\"\r\n                      onClick={additionalDetailsEditClick}\r\n                    >\r\n                      edit\r\n                    </i>\r\n                  </p>\r\n                  {!editAdditionalDetails ? (\r\n                    <div className=\"input-field\">\r\n                      <p className=\"darkslategrayText bigTextScroll\">\r\n                        {additionalDetails}\r\n                      </p>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"input-field\">\r\n                      {\" \"}\r\n                      {/*   Additional Details Edit */}\r\n                      <textarea\r\n                        className=\"materialize-textarea\"\r\n                        value={additionalDetails}\r\n                        onChange={(e) => setAdditionalDetails(e.target.value)}\r\n                      ></textarea>\r\n                      <button\r\n                        title=\"Save\"\r\n                        className=\"btn green darken-2 right updateBtn\"\r\n                        onClick={additionalDetailsEditSave}\r\n                      >\r\n                        <i className=\"actions-icon material-icons\">check</i>\r\n                      </button>\r\n                      <button\r\n                        title=\"Cancel\"\r\n                        className=\"btn yellow darken-2 right updateBtn\"\r\n                        onClick={additionalDetailsEditCancel}\r\n                      >\r\n                        <i className=\"actions-icon material-icons\">cancel</i>\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                  <p className=\"heading left-align indigo-text darken-4\">\r\n                    {\" \"}\r\n                    {/*  Attachments */}\r\n                    <i className=\"material-icons inline-icon\">attachment</i>\r\n                    Attachments:\r\n                  </p>\r\n\r\n                  <div className=\"input-field\">\r\n                    <ul className=\"input-field incidentFiles\">\r\n                      {!incidentData.Attachments\r\n                        ? null\r\n                        : incidentData.Attachments.map((file) => {\r\n                            return (\r\n                              <li\r\n                                key={file._id}\r\n                                className=\"center indigo-text darken-4\"\r\n                              >\r\n                                <i\r\n                                  title=\"Remove\"\r\n                                  className=\"actions-icon material-icons red-text inline-icon\"\r\n                                  onClick={() => deleteIncidentAttachment(file)}\r\n                                >\r\n                                  cancel\r\n                                </i>\r\n                                <span\r\n                                  title={file.FileName}\r\n                                  onClick={() => downloadFile(file)}\r\n                                >\r\n                                  {file.FileName.length > 35\r\n                                    ? file.FileName.slice(0, 35) + \"...\"\r\n                                    : file.FileName}\r\n                                </span>\r\n                              </li>\r\n                            );\r\n                          })}\r\n                    </ul>\r\n                  </div>\r\n\r\n                  <Comments\r\n                    userId={userId}\r\n                    incidentId={incidentData._id}\r\n                    comments={incidentData.Comments}\r\n                    getNameById={getNameById}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"col s12 l5 offset-l1  ID-dropdowns\">\r\n                  <table>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>\r\n                          <p className=\"heading left indigo-text darken-4\">\r\n                            Assignee\r\n                          </p>\r\n                        </td>\r\n                        <td>                         \r\n                          <AssigneeDropdown\r\n                            updateIncidentByField={updateIncidentByField}\r\n                            setAssignee={setAssignee}\r\n                            assigneeName = {assigneeName}\r\n                            setAssigneeName = {setAssigneeName}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>\r\n                          <p className=\"heading left indigo-text darken-4\">\r\n                            Status{\" \"}\r\n                          </p>\r\n                        </td>\r\n                        <td>\r\n                          <select\r\n                            ref={statusRef}\r\n                            value={status}\r\n                            onChange={statusChanged}\r\n                          >\r\n                            <option value=\"N\" disabled >\r\n                              New\r\n                            </option>\r\n                            <option value=\"I\">In Progress</option>\r\n                            <option value=\"C\">Closed</option>\r\n                            <option value=\"A\">Approved</option>\r\n                          </select>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>\r\n                          <p className=\"heading left indigo-text darken-4\">\r\n                            Due Date\r\n                            <i\r\n                              className=\"actions-icon inline-icon material-icons\"\r\n                              onClick={dueDateEditClick}\r\n                            >\r\n                              edit\r\n                            </i>\r\n                          </p>\r\n                        </td>\r\n                        <td>\r\n                          {!editDueDate ? (\r\n                            <p\r\n                              title={moment(dueDate).format(\r\n                                \"MMMM DD YYYY, h:mm a\"\r\n                              )}\r\n                            >\r\n                              {moment(dueDate).fromNow()}\r\n                            </p>\r\n                          ) : null}\r\n                          <div className={editDueDate ? \"\" : \"hide\"}>\r\n                            <div className=\"input-field \">\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"dueDateDate\"\r\n                                className=\"datepicker\"\r\n                                ref={dueDateDateRef}\r\n                              />\r\n                              <label htmlFor=\"dueDateDate\" className=\"\">\r\n                                Pick Date\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"input-field \">\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"dueDateTime\"\r\n                                className=\"timepicker\"\r\n                                ref={dueDateTimeRef}\r\n                              />\r\n                              <label htmlFor=\"dueDateTime\" className=\"\">\r\n                                Pick Time\r\n                              </label>\r\n                            </div>\r\n                            <button\r\n                              title=\"Save\"\r\n                              className=\"btn green darken-2 right updateBtn\"\r\n                              onClick={dueDateEditSave}\r\n                            >\r\n                              <i className=\"actions-icon material-icons\">\r\n                                check\r\n                              </i>\r\n                            </button>\r\n                            <button\r\n                              title=\"Cancel\"\r\n                              className=\"btn yellow darken-2 right updateBtn\"\r\n                              onClick={dueDateEditCancel}\r\n                            >\r\n                              <i className=\"actions-icon material-icons\">\r\n                                cancel\r\n                              </i>\r\n                            </button>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>\r\n                          <p className=\"heading left indigo-text darken-4\">\r\n                            Start Time\r\n                            <i\r\n                              className=\"actions-icon inline-icon material-icons\"\r\n                              onClick={startDateEditClick}\r\n                            >\r\n                              edit\r\n                            </i>\r\n                          </p>\r\n                        </td>\r\n                        <td>\r\n                          {!editStartDate ? (\r\n                            <p\r\n                              title={moment(startTime).format(\r\n                                \"MMMM DD YYYY, h:mm a\"\r\n                              )}\r\n                            >\r\n                              {moment(startTime).fromNow()}\r\n                            </p>\r\n                          ) : null}\r\n                          <div className={editStartDate ? \"\" : \"hide\"}>\r\n                            <div className=\"input-field\">\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"startTimeDate\"\r\n                                className=\"datepicker\"\r\n                                ref={startTimeDateRef}\r\n                              />\r\n                              <label htmlFor=\"startTimeDate\" className=\"\">\r\n                                Pick Date\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                              <input\r\n                                readOnly\r\n                                type=\"text\"\r\n                                id=\"startTimeTime\"\r\n                                className=\"timepicker\"\r\n                                ref={startTimeTimeRef}\r\n                              />\r\n                              <label htmlFor=\"startTimeime\" className=\"\">\r\n                                Pick Time\r\n                              </label>\r\n                            </div>\r\n                            <button\r\n                              title=\"Save\"\r\n                              className=\"btn green darken-2 right updateBtn\"\r\n                              onClick={startDateEditSave}\r\n                            >\r\n                              <i className=\"actions-icon material-icons\">\r\n                                check\r\n                              </i>\r\n                            </button>\r\n                            <button\r\n                              title=\"Cancel\"\r\n                              className=\"btn yellow darken-2 right updateBtn\"\r\n                              onClick={startDateEditCancel}\r\n                            >\r\n                              <i className=\"actions-icon material-icons\">\r\n                                cancel\r\n                              </i>\r\n                            </button>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    allAssignees: state.users.users,\r\n    incidentData: state.incidents.IncidentSelected,\r\n    userId :state.userLogin.userId,  // logged in User Id  \r\n    IncidentDetailError : state.incidents.IncidentDetailError     // if api ERROR\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllAssignees: () => dispatch(allUsers()),\r\n    getIncidentById: (incidentId) => dispatch(getIncidentById(incidentId)), \r\n    updateIncident: (parameters) => dispatch(updateIncident(parameters)),   \r\n    deleteAttachment : (type, userid, incidentId , file) => dispatch(deleteAttachment(type, userid, incidentId ,file))    \r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IncidentDetails);\r\n","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Incidents\\IncidentLisiting.js",["398","399"],"D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Users\\UsersList.js",["400"],"D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Incidents\\AddNew.js",["401"],"import {React , useRef, useEffect, useState} from 'react';\r\nimport PageActions from \"../PageActions\";\r\nimport M from 'materialize-css';\r\nimport {  useHistory  } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { allUsers } from '../../store/actions/usersActions';\r\nimport { addNewIncident } from '../../store/actions/incidentsActions';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n function AddNew({getAllAssignees, allAssignees, userId, addNewIncident, addNewError, AddNewIncidentStatus}) {\r\n\r\n    const dueDateTimeRef= useRef();\r\n    const dueDateDateRef= useRef();\r\n    const startTimeTimeRef = useRef();\r\n    const startTimeDateRef = useRef();\r\n    const assigneeRef = useRef();   \r\n   \r\n\r\n    const history = useHistory();\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [additionalDetails, setAdditionalDetails] = useState(\"\");  \r\n    const [files , setFiles] = useState(null);\r\n    const [assignee, setAssignee] = useState(null);  \r\n    const [assigneeName, setAssigneeName] = useState(\"\");  \r\n    const [assigneeList, setAssigneeList] = useState(allAssignees);\r\n    const [formError, setFormError] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n      console.log(\"Set hook\");\r\n      setAssigneeList(allAssignees);\r\n    }, [allAssignees])\r\n\r\n    useEffect(() => {      \r\n        M.Datepicker.init(startTimeDateRef.current);\r\n        M.Timepicker.init(startTimeTimeRef.current);\r\n        M.Datepicker.init(dueDateDateRef.current);\r\n        M.Timepicker.init(dueDateTimeRef.current);\r\n        var options = {\r\n          closeOnClick : false\r\n        }\r\n        M.Dropdown.init(assigneeRef.current, options);\r\n        getAllAssignees();\r\n    }, []);\r\n\r\n   const onFileChange = (event) => {    \r\n     if (event.target.files.length > 3) {\r\n       //alert(\"You can only attach upto 3 files. All extra files will be ignored.\");\r\n     }     \r\n     setFiles(event.target.files);\r\n   };\r\n\r\n   const cancelClick = (event) => {\r\n     event.preventDefault();\r\n     history.goBack();\r\n     //console.log(history);\r\n   };\r\n\r\n\r\n   const assigneeSelected = (userId) => {       \r\n    let currentAssignee = allAssignees.find(assignee => {\r\n        return assignee._id === userId\r\n    })\r\n    console.log(currentAssignee);\r\n    var assigneeDropdown = M.Dropdown.getInstance(assigneeRef.current);\r\n    assigneeDropdown.close();\r\n    setAssignee(userId);\r\n    setAssigneeName(currentAssignee.FirstName + \" \" + currentAssignee.LastName);\r\n   }\r\n\r\n   const searchAssignee = (event) => {    \r\n     let newList = [];\r\n     if(event.target.value !== \"\")\r\n        newList = allAssignees.filter(assignee => {    \r\n        return assignee.FirstName.toUpperCase().startsWith(event.target.value.toUpperCase()) \r\n            || assignee.LastName.toUpperCase().startsWith(event.target.value.toUpperCase());\r\n      });\r\n    \r\n     if(newList !== undefined && newList.length !== 0){ //check if there is atlease one assignee       \r\n      newList = [].concat(newList); \r\n     }\r\n     else{//if search found nothing, show all assignees\r\n        newList = allAssignees.slice(0,allAssignees.length);       \r\n     } \r\n     setAssigneeList(newList);   \r\n   }\r\n\r\n   const validateForm = () => {\r\n\r\n    if(title === \"\" || description ===\"\" || dueDateDateRef.current.value === \"\" || dueDateTimeRef.current.value === \"\"\r\n        || startTimeDateRef.current.value === \"\" || startTimeTimeRef.current.value === \"\"  )\r\n        return false;\r\n    return true;\r\n\r\n   }\r\n\r\n   const saveClick = (event) => {\r\n    event.preventDefault();     \r\n    if(!validateForm()){\r\n      setFormError(\"Please complete required fields before saving.\")\r\n      return;\r\n    }\r\n    \r\n    setFormError(\"\");\r\n\r\n    let startTime  = new Date( startTimeDateRef.current.value + \" \" + startTimeTimeRef.current.value);\r\n    startTime = (startTime.getMonth() + 1) + \"/\" + startTime.getDate() + \"/\" +  startTime.getFullYear() \r\n                + \" \" + startTime.getHours() + \":\" + startTime.getMinutes() + \":\" + startTime.getSeconds(); \r\n\r\n    let dueDate  = new Date( dueDateDateRef.current.value + \" \" + dueDateTimeRef.current.value);\r\n    dueDate = (dueDate.getMonth() + 1) + \"/\" + dueDate.getDate() + \"/\" +  dueDate.getFullYear() \r\n                + \" \" + dueDate.getHours() + \":\" + dueDate.getMinutes() + \":\" + dueDate.getSeconds(); \r\n   \r\n    const formData = new FormData(); \r\n\r\n    if(files){\r\n        for(let i = 0; i < files.length ; i++){\r\n          formData.append( \r\n            \"Attachment\" + i+1, \r\n            files[i], \r\n            files[i].name \r\n          );\r\n        }\r\n    }   \r\n     formData.append(\"CreatedBy\", userId); \r\n     formData.append(\"AssignedTo\", assignee);\r\n     formData.append(\"Title\", title); \r\n     formData.append(\"Description\", description); \r\n     formData.append(\"AdditionalData\", additionalDetails); \r\n     formData.append(\"StartTime\", startTime ); \r\n     formData.append(\"DueDate\",  dueDate ); \r\n     formData.append(\"Status\", \"N\"); \r\n\r\n     \r\n     //setTitle(\"\");\r\n\r\n     addNewIncident(formData);\r\n    // setTitle(\"\");\r\n     //setDescription(\"\");     \r\n\r\n  }; \r\n\r\n  if(AddNewIncidentStatus){\r\n    return <Redirect to='/incidentListing' /> \r\n  }\r\n \r\n    return (\r\n      <>\r\n        <PageActions Title={\"Add new Incident\"} />\r\n        <section>\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col s12 l10 offset-l1\">\r\n                <form>\r\n                  <div className=\"row\">\r\n                    <div className=\"col s12 l6\">\r\n                      <div className=\"input-field \">\r\n                        <input\r\n                        className=\"validate\"\r\n                          required\r\n                          type=\"text\"\r\n                          id=\"title\"\r\n                          value={title}\r\n                          onChange={(e) => setTitle(e.target.value)}\r\n                        />\r\n                        <label htmlFor=\"title\">Title</label>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"input-field col s12 l6\">                    \r\n                      <input\r\n                        readOnly                    \r\n                        required\r\n                        type=\"text\"\r\n                        className=\"dropdown-trigger validate\"\r\n                        id=\"assignee\"\r\n                        data-target=\"dropdown1\"\r\n                        placeholder=\"\"\r\n                        ref={assigneeRef}\r\n                        value={assigneeName}\r\n                      />                    \r\n                      \r\n                       <label htmlFor=\"assignee\">Assignee </label> \r\n                    </div>\r\n                      <ul id=\"dropdown1\" className=\"dropdown-content\">\r\n                        <li>\r\n                          <input type=\"text\"  placeholder=\"Search Assignee\" onChange={searchAssignee}     />\r\n                        </li>\r\n                        {!assigneeList? null : assigneeList.map((user) => {\r\n                          return (\r\n                            <li  key={user._id} onClick= {()=>assigneeSelected(user._id)}>\r\n                              <a className=\"indigo-text\" href=\"#!\">  {user.FirstName + \" \" + user.LastName}    </a>\r\n                            </li>\r\n                          );\r\n                        })}\r\n                      </ul>                   \r\n                  </div>\r\n                  <div className=\"input-field\">\r\n                    <textarea\r\n                      required\r\n                      value={description}\r\n                      id=\"description\"\r\n                      className=\"materialize-textarea validate\"\r\n                      onChange={(e) => setDescription(e.target.value)}\r\n                    ></textarea>\r\n                    <label htmlFor=\"description\" className=\"\">\r\n                      Description\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div className=\"input-field\">\r\n                    <textarea\r\n                      value={additionalDetails}\r\n                      id=\"additionalDetails\"\r\n                      className=\"materialize-textarea\"\r\n                      onChange={(e) => setAdditionalDetails(e.target.value)}\r\n                    ></textarea>\r\n                    <label htmlFor=\"additionalDetails\" className=\"\">\r\n                      Additional Details\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"input-field col s6\">\r\n                      <input\r\n                        required\r\n                        type=\"text\"\r\n                        id=\"startTimeDate\"\r\n                        className=\"datepicker validate\"\r\n                        ref={startTimeDateRef}\r\n                      />\r\n                      <label htmlFor=\"startTimeDate\" className=\"\">\r\n                      Start Time (Pick Date)\r\n                      </label>\r\n                    </div>\r\n\r\n                    <div className=\"input-field col s6\">\r\n                      <input\r\n                        required\r\n                        type=\"text\"\r\n                        id=\"startTimeTime\"\r\n                        className=\"timepicker validate\"\r\n                        ref={startTimeTimeRef}\r\n                      />\r\n                      <label htmlFor=\"startTimeime\" className=\"\">\r\n                       Start Time (Pick Time)\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"input-field col s6\">\r\n                      <input\r\n                        required\r\n                        type=\"text\"\r\n                        id=\"dueDateDate\"\r\n                        className=\"datepicker validate\"\r\n                        ref={dueDateDateRef}\r\n                      />\r\n                      <label htmlFor=\"dueDateDate\" className=\"\">\r\n                        Due Date (Pick Date)\r\n                      </label>\r\n                    </div>\r\n\r\n                    <div className=\"input-field col s6\">\r\n                      <input\r\n                        required\r\n                        type=\"text\"\r\n                        id=\"dueDateTime\"\r\n                        className=\"timepicker validate\" \r\n                        ref={dueDateTimeRef}\r\n                      />\r\n                      <label htmlFor=\"dueDateTime\" className=\"\">\r\n                        Due Date (Pick Time)\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"file-field input-field\">\r\n                    <div className=\"btn indigo darken-2\">\r\n                      <i className=\"material-icons \">attachment</i>\r\n                      <input\r\n                        type=\"file\"\r\n                        id=\"attachment\"\r\n                        multiple\r\n                        onChange={onFileChange}\r\n                      />\r\n                    </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                      <input\r\n                        className=\"file-path validate\"\r\n                        type=\"text\"\r\n                        placeholder=\"Upload upto 3 files\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"input-field\">\r\n                      <p className=\"red-text center\">{formError ? formError : \"\" }</p>\r\n                      <p className=\"red-text center\">{addNewError}</p>\r\n                      \r\n                  </div>\r\n\r\n                  \r\n                  <div className=\"input-field \">\r\n                    <button\r\n                      className=\"btn green darken-2 left\"\r\n                      onClick={saveClick}\r\n                    >\r\n                      <span>Save</span>\r\n                      <i className=\"material-icons right\">save</i>\r\n                    </button>\r\n\r\n                    <button\r\n                      className=\"btn yellow darken-4 left\"\r\n                      onClick={cancelClick}\r\n                    >\r\n                      <span>Cancel</span>\r\n                      <i className=\"material-icons right\">cancel</i>\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {        \r\n    return{\r\n        allAssignees : state.users.users,\r\n        user_Name :state.userLogin.user_Name, // Logged in User's name\r\n        userId :state.userLogin.userId,  // logged in User Id      \r\n        addNewError :state.incidents.AddNewIncidentError, \r\n        AddNewIncidentStatus :state.incidents.AddNewIncidentStatus \r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAllAssignees: () => dispatch(allUsers()),\r\n        addNewIncident : (formData) => dispatch(addNewIncident(formData))\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNew);\r\n","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Users\\AddUser.js",["402","403"],"import {React , useRef, useEffect, useState} from 'react';\r\nimport PageActions from \"../PageActions\";\r\nimport M from 'materialize-css';\r\nimport {  useHistory  } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { addNewUser } from '../../store/actions/usersActions';\r\n\r\n\r\n function AddUser({addNewUser}){\r\n\r\n\r\n    const history = useHistory();\r\n\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");  \r\n    const [phone, setPhone] = useState(\"\");  \r\n    const [profilePic , setProfilePic] = useState(null);\r\n\r\n    const [formError, setFormError] = useState(\"\");\r\n\r\n    useEffect(() => {     \r\n       \r\n      \r\n    }, []);\r\n\r\n   const onFileChange = (event) => {    \r\n     \r\n    setProfilePic(event.target.files);\r\n   };\r\n\r\n   const cancelClick = (event) => {\r\n     event.preventDefault();\r\n     history.goBack();\r\n     //console.log(history);\r\n   };\r\n\r\n   const validateForm = () => {\r\n\r\n    if(firstName === \"\" || lastName === \"\" || email === \"\"  || phone === \"\" )\r\n        return false;\r\n    return true;\r\n\r\n   }\r\n\r\n   const saveClick = (event) => {\r\n    event.preventDefault();     \r\n    if(!validateForm()){\r\n      setFormError(\"Please complete required fields before saving.\")\r\n      return;\r\n    }\r\n    \r\n    setFormError(\"\");\r\n   \r\n   \r\n    const formData = new FormData(); \r\n\r\n    if(profilePic){\r\n       \r\n          formData.append( \r\n            \"Attachment1\", \r\n            profilePic[0], \r\n            profilePic[0].name \r\n          );\r\n          }\r\n     formData.append(\"FirstName\", firstName); \r\n     formData.append(\"LastName\", lastName);\r\n     formData.append(\"Email\", email); \r\n     formData.append(\"Phone\", phone ); \r\n     addNewUser(formData);\r\n  }; \r\n\r\n \r\n    return (\r\n      <>\r\n        <PageActions Title={\"Add new User\"} />\r\n        <section>\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col s12 l10 offset-l1\">\r\n                <form>\r\n                  <div className=\"row\">\r\n                    <div className=\"col s12 l6\">\r\n                      <div className=\"input-field \">\r\n                        <input\r\n                         className=\"validate\"\r\n                          required\r\n                          type=\"text\"\r\n                          id=\"firstName\"\r\n                          value={firstName}\r\n                          onChange={(e) => setFirstName(e.target.value)}\r\n                        />\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"input-field col s12 l6\">                    \r\n                        <input\r\n                            className=\"validate\"\r\n                            required\r\n                            type=\"text\"\r\n                            id=\"lastName\"\r\n                            value={lastName}\r\n                            onChange={(e) => setLastName(e.target.value)}\r\n                            />\r\n                            <label htmlFor=\"lastName\">Last Name</label> \r\n                    </div>\r\n                                      \r\n                  </div>\r\n                  <div className=\"input-field\">\r\n                         <input\r\n                            className=\"validate\"\r\n                            required\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                            <label htmlFor=\"email\">Email</label> \r\n                  </div>\r\n\r\n                  <div className=\"input-field\">\r\n                         <input\r\n                            className=\"validate\"\r\n                            required\r\n                            type=\"text\"\r\n                            id=\"phone\"\r\n                            value={phone}\r\n                            onChange={(e) => setPhone(e.target.value)}\r\n                            />\r\n                            <label htmlFor=\"phone\">Phone</label> \r\n                  </div>\r\n\r\n                  <div className=\"file-field input-field\">\r\n                    <div className=\"btn indigo darken-2\">\r\n                      <i className=\"material-icons \">attachment</i>\r\n                      <input\r\n                        type=\"file\"\r\n                        id=\"attachment\"                        \r\n                        onChange={onFileChange}\r\n                      />\r\n                    </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                      <input\r\n                        className=\"file-path validate\"\r\n                        type=\"text\"\r\n                        placeholder=\"Upload profile picture\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"input-field\">\r\n                      <p className=\"red-text center\">{formError ? formError : \"\" }</p>\r\n                  </div>\r\n\r\n                  \r\n                  <div className=\"input-field \">\r\n                    <button\r\n                      className=\"btn green darken-2 left\"\r\n                      onClick={saveClick}\r\n                    >\r\n                      <span>Save</span>\r\n                      <i className=\"material-icons right\">save</i>\r\n                    </button>\r\n\r\n                    <button\r\n                      className=\"btn yellow darken-4 left\"\r\n                      onClick={cancelClick}\r\n                    >\r\n                      <span>Cancel</span>\r\n                      <i className=\"material-icons right\">cancel</i>\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {        \r\n    return{\r\n        allAssignees : state.users.users,\r\n        user_Name :state.userLogin.user_Name, // Logged in User's name\r\n        userId :state.userLogin.userId,  // logged in User Id       \r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {       \r\n        addNewUser : (formData) => dispatch(addNewUser(formData))\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddUser);\r\n","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\signalR\\Receiver.js",["404"],"import {React, useEffect} from 'react'\r\nimport { connect } from 'react-redux';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { commentRecieved, getAllNotifications } from \"../store/actions/notificationsActions\";\r\nimport { updateHubId } from '../store/actions/userLoginActions';\r\nimport { baseUrl } from '../api/apiURLs';\r\n\r\n\r\n  function Receiver({commentRecieved, updateHubId, userId, refreshNotifications, token}) {\r\n\r\n    useEffect(() => { \r\n        let socket = socketIOClient(baseUrl, {\r\n          extraHeaders: {\r\n            \"x-access-token\": token\r\n        }});\r\n        socket.on('connect', function() {\r\n          const sessionID = socket.id; //\r\n          console.log('socket id : ' + sessionID);\r\n          updateHubId(sessionID, userId);\r\n        });\r\n\r\n        socket.on('UpdateNotifications', function(incidentId) {\r\n          console.log(incidentId + \" has been updated.\");\r\n          refreshNotifications(userId);\r\n        });\r\n     \r\n    }, []) \r\n\r\n    return (\r\n        <>            \r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      allAssignees: state.users.users,\r\n      incidentData: state.incidents.IncidentSelected,\r\n      userId :state.userLogin.userId,  // logged in User Id  \r\n      token : state.userLogin.token     \r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        commentRecieved: (comment) => dispatch(commentRecieved(comment)),\r\n        updateHubId: (hubId, userId) => dispatch(updateHubId(hubId, userId)),\r\n        refreshNotifications : (userId) =>  dispatch(getAllNotifications(userId))\r\n    };\r\n  };\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(Receiver);\r\n  \r\n","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Incidents\\Dashboard\\Dashboard.js",["405"],"import React from 'react'\r\nimport PageActions from '../../PageActions';\r\nimport KPIBar from './KPIBar';\r\nimport OverallWidget from './OverallWidget'\r\nimport LastFive from './LastFive';\r\nimport  '../../../styles/dashboard.css'\r\nimport MostAssignedByUser from './MostAssignedByUser';\r\nimport DayByDayCount from './DayByDayCount';\r\nimport FiveOldestOpenIncidents from './OldestOpen';\r\n\r\n function Dashboard() {\r\n \r\n\r\n    return (\r\n      <div>\r\n        <PageActions Title={\"Dashboard\"} />\r\n        \r\n        <div className=\"container\">     \r\n          <KPIBar />\r\n          <div className=\"row\">\r\n             <OverallWidget />\r\n           <LastFive />\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n          <MostAssignedByUser />\r\n          <FiveOldestOpenIncidents />\r\n           {/* \r\n           */}\r\n           {/* <DayByDayCount /> */}\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\store\\reducers\\usersReducer.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\store\\reducers\\userLoginReducer.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\store\\reducers\\notificationsReducer.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\store\\reducers\\incidentsReducer.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\store\\reducers\\dashboardReducer.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Notifications.js",["406"],"import {React, useRef, useEffect, useState} from 'react'\r\nimport {  useHistory  } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport M from 'materialize-css';\r\nimport  '../styles/notifications.css'\r\nimport {getAllNotifications, setNotificationStatus} from '../store/actions/notificationsActions';\r\nimport { removeIncidentData, getIncidentById } from \"../store/actions/incidentsActions\";\r\n\r\n\r\n function Notifications({\r\n   getNotifications,\r\n   userId,\r\n   notifications,\r\n   setNotificationStatus,\r\n   removeIncidentData,\r\n   getIncidentById\r\n }) {\r\n   const ddlNotiRef = useRef();\r\n   const history = useHistory();\r\n\r\n   const [unReadCount, setUnReadCount] = useState(\r\n     notifications.filter((notification) => !notification.IsRead).length\r\n   );\r\n\r\n   useEffect(() => {\r\n     var options = {\r\n       closeOnClick: false,\r\n     };\r\n     M.Dropdown.init(ddlNotiRef.current, options);\r\n   }, []);\r\n\r\n   useEffect(() => {\r\n     getNotifications(userId);\r\n   }, []);\r\n\r\n   useEffect(() => {\r\n     setUnReadCount(\r\n       notifications.filter((notification) => !notification.IsRead).length\r\n     );\r\n   }, [notifications]);\r\n\r\n   const setStatus = (id, status) => {\r\n     console.log(id);\r\n     setNotificationStatus(id, status);\r\n   };\r\n\r\n   const openIncident = (notification) => {\r\n     setStatus(notification._id, true);\r\n\r\n     let path = \"/Incident/\" + notification.IncidentId;\r\n     if (history.location.pathname !== path) {\r\n       // only change path if it is different      \r\n       removeIncidentData(); // So that user does not see old data that is stored in redux (and local storage)\r\n     }\r\n     else{\r\n      M.Dropdown.getInstance(ddlNotiRef.current).close();\r\n      getIncidentById(notification.IncidentId); //if already on the same incident, just get new data and update page\r\n     }\r\n     history.push(path);\r\n   };\r\n\r\n   return (\r\n     <>\r\n       <li>\r\n         <a\r\n           ref={ddlNotiRef}\r\n           href=\"#dropdown1\"\r\n           className=\"btn-floating z-depth-0 theme-color-background dropdown-trigger\"\r\n           data-target=\"dropdownNotifications\"\r\n         >\r\n           <i className=\"material-icons\">notifications</i>\r\n         </a>\r\n         <ul\r\n           id=\"dropdownNotifications\"\r\n           className=\"notifications dropdown-content\"\r\n         >\r\n           {notifications == null || notifications.length < 1 ? (\r\n             <li>\r\n               <div className=\"notification-box\">\r\n                 <p className=\"\">No new notificaitons.</p>\r\n               </div>\r\n             </li>\r\n           ) : (\r\n             notifications.map((notification) => {\r\n               let classes = notification.IsRead\r\n                 ? \"notification-box read\"\r\n                 : \"notification-box unread\";\r\n               return (\r\n                 <li key={notification._id}>\r\n                   <div className={classes}>\r\n                     <div className=\"row\">\r\n                       <div className=\"col s2\">\r\n                         {notification.IsRead ? (\r\n                           <i\r\n                             className=\"material-icons black-text readIcon\"\r\n                             title=\"Mark Unread\"\r\n                             onClick={() => setStatus(notification._id, false)}\r\n                           >\r\n                             radio_button_unchecked\r\n                           </i>\r\n                         ) : (\r\n                           <i\r\n                             className=\"material-icons black-text readIcon\"\r\n                             title=\"Mark Read\"\r\n                             onClick={() => setStatus(notification._id, true)}\r\n                           >\r\n                             radio_button_checked\r\n                           </i>\r\n                         )}\r\n                       </div>\r\n                       <div className=\"col s10 right\">\r\n                         <p onClick={() => openIncident(notification)}>\r\n                           {\" \"}\r\n                           {notification.NotifyAbout}\r\n                         </p>\r\n                       </div>\r\n                     </div>\r\n                   </div>\r\n                 </li>\r\n               );\r\n             })\r\n           )}\r\n         </ul>\r\n       </li>\r\n       <li>\r\n         {unReadCount > 0 ? (\r\n           <span className=\"badge white-text new green darken-2\">{unReadCount}</span>\r\n         ) : null}\r\n       </li>\r\n     </>\r\n   );\r\n }\r\n\r\nconst mapStateToProps = (state) => {        \r\n    return{      \r\n        notifications :state.notifications.notifications,\r\n        userId :state.userLogin.userId  // logged in User Id   \r\n    }\r\n  }  \r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      getNotifications: (userid) => dispatch(getAllNotifications(userid)),\r\n      setNotificationStatus : (id, isRead) => dispatch(setNotificationStatus(id, isRead)),\r\n      removeIncidentData : () => dispatch(removeIncidentData()),\r\n      getIncidentById: (incidentId) => dispatch(getIncidentById(incidentId)), \r\n    };\r\n};\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(Notifications);\r\n  ","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\PageActions.js",["407","408","409"],"import React from 'react'\r\n\r\nexport default function PageActions(props) {\r\n    return (\r\n      <section className=\"container\">\r\n        <div className=\"row \">\r\n          <div className=\"col s12 l5\">\r\n            <div className=\"left\">\r\n              <h5 className=\"title\">{props.Title}</h5>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"col s7 l9 hide\">\r\n            <div className=\"right\">\r\n              <ul className=\"actionsBtns\">\r\n                <li>\r\n                  <a className=\"btn-floating green\">\r\n                    <i className=\"material-icons\">refresh</i>\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"btn-floating red\">\r\n                    <i className=\"material-icons\">print</i>\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"btn-floating blue\">\r\n                    <i className=\"material-icons\">file_download</i>\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n}\r\n","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Incidents\\Comments.js",["410","411","412","413"],"import { React, useEffect, useState, useRef } from \"react\";\r\nimport moment from \"moment\";\r\nimport {  useHistory  } from 'react-router-dom';\r\nimport Comment from \"./Comment\";\r\nimport { connect } from \"react-redux\";\r\nimport {  addNewComment } from \"../../store/actions/incidentsActions\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nfunction Comments({\r\n  incidentId,\r\n  comments,\r\n  userId,\r\n  getNameById,\r\n  addNewComment\r\n}) {\r\n  const [newComment, setNewComment] = useState(\"\");\r\n  const [newCommentFiles, setNewCommentFiles] = useState(null);\r\n\r\n  const newCommentFilesRef = useRef();\r\n  const history = useHistory();\r\n  //console.log(history);\r\n  const onFileChange = (event) => {\r\n    setNewCommentFiles(event.target.files);\r\n  };\r\n\r\n  const saveComment = () => {\r\n    if (newComment.trim() === \"\") {\r\n      alert(\"Please add comment first.\");\r\n      return;\r\n    }\r\n    const formData = new FormData();\r\n\r\n    if (newCommentFiles) {\r\n      for (let i = 0; i < newCommentFiles.length; i++) {\r\n        formData.append(\r\n          \"Attachment\" + i + 1,\r\n          newCommentFiles[i],\r\n          newCommentFiles[i].name\r\n        );\r\n      }\r\n    }\r\n    formData.append(\"CommentText\", newComment.trim());\r\n    formData.append(\"IncidentId\", incidentId);\r\n    formData.append(\"UserId\", userId);\r\n    addNewComment(formData);\r\n\r\n    setNewComment(\"\");\r\n    setNewCommentFiles(null);\r\n    newCommentFilesRef.current.value = \"\";\r\n    //history.push(history.location.pathname);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h5 className=\"heading left-align\">Comments</h5>\r\n      <p className=\"all-comments-box\">\r\n        {!comments ? (\r\n          <h1>No Comments</h1>\r\n        ) : (\r\n          comments.map((comment) => {\r\n            return (\r\n              <Comment\r\n                key={comment._id}\r\n                comment={comment}\r\n                getNameById={getNameById}\r\n                incidentId={incidentId}\r\n                userId={userId}                       \r\n              />\r\n            );\r\n          })\r\n        )}{\" \"}\r\n        {/* end of comments loop */}\r\n      </p>\r\n\r\n      <h6 className=\"heading indigo-text darken-4 left-align\">Add Comment</h6>\r\n      <div className=\"input-field\">\r\n        <textarea\r\n          id=\"comment\"\r\n          className=\"materialize-textarea\"\r\n          value={newComment}\r\n          onChange={(e) => setNewComment(e.target.value)}\r\n        ></textarea>\r\n        <label htmlFor=\"comment\" className=\"\">\r\n          Comment\r\n        </label>\r\n      </div>\r\n      <div className=\"file-field input-field\">\r\n        <div className=\"btn indigo darken-2\">\r\n          <i className=\"material-icons \">attachment</i>\r\n          <input type=\"file\" id=\"attachment\" multiple onChange={onFileChange} />\r\n        </div>\r\n        <div className=\"file-path-wrapper\">\r\n          <input\r\n            className=\"file-path validate\"\r\n            ref={newCommentFilesRef}\r\n            type=\"text\"\r\n            placeholder=\"Upload upto 3 files\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"input-field center \">\r\n        <button\r\n          className=\"left btn green darken-2 updateBtn\"\r\n          onClick={saveComment}\r\n        >\r\n          <span>Add</span>\r\n          <i className=\"material-icons right\">save</i>\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    allAssignees: state.users.users,\r\n    incidentData: state.incidents.IncidentSelected,\r\n    userId :state.userLogin.userId,  // logged in User Id       \r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {    \r\n    addNewComment: (formData) => dispatch(addNewComment(formData))    \r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments);\r\n","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Incidents\\AssigneeDropdown.js",["414","415"],"import { React, useEffect, useState, useRef } from \"react\";\r\nimport {  updateIncident, deleteAttachment } from \"../../store/actions/incidentsActions\";\r\nimport M from \"materialize-css\";\r\nimport { connect } from \"react-redux\";\r\nimport { allUsers } from \"../../store/actions/usersActions\";\r\n\r\nfunction AssigneeDropdown({getAllAssignees, allAssignees, updateIncidentByField, setAssignee ,assigneeName, setAssigneeName }) {\r\n\r\n    const [assigneeList, setAssigneeList] = useState(allAssignees);\r\n    \r\n    const assigneeRef = useRef();\r\n\r\n    useEffect(() => {       \r\n        getAllAssignees();\r\n      }, []); // get assignee on first render only\r\n    \r\n    useEffect(() => {\r\n        setAssigneeList(allAssignees);\r\n      }, [allAssignees]);\r\n\r\n      useEffect(() => {\r\n        setMaterializeCSS();\r\n      }, [allAssignees]);\r\n\r\n      \r\n  const setMaterializeCSS = () => {\r\n    var options = {\r\n      closeOnClick: false,\r\n    };\r\n    M.Dropdown.init(assigneeRef.current, options);   \r\n  }\r\n\r\n  const assigneeSelected = (userId) => {\r\n    let currentAssignee = allAssignees.find((assignee) => {\r\n      return assignee._id === userId;\r\n    });\r\n\r\n    setAssignee(userId);\r\n    setAssigneeName(currentAssignee.FirstName + \" \" + currentAssignee.LastName);\r\n    if(updateIncidentByField)\r\n         updateIncidentByField(\"AssignedTo\" , userId); \r\n\r\n    var assigneeDropdown = M.Dropdown.getInstance(assigneeRef.current);\r\n    assigneeDropdown.close();\r\n  };\r\n\r\n  const searchAssignee = (event) => {\r\n    let newList = [];\r\n    if (event.target.value !== \"\")\r\n      newList = allAssignees.filter((assignee) => {\r\n        return (\r\n          assignee.FirstName.toUpperCase().startsWith(\r\n            event.target.value.toUpperCase()\r\n          ) ||\r\n          assignee.LastName.toUpperCase().startsWith(\r\n            event.target.value.toUpperCase()\r\n          )\r\n        );\r\n      });\r\n\r\n    if (newList !== undefined && newList.length !== 0) {\r\n      //check if there is atlease one assignee\r\n      newList = [].concat(newList);\r\n    } else {\r\n      //if search found nothing, show all assignees\r\n      newList = allAssignees.slice(0, allAssignees.length);\r\n    }\r\n    setAssigneeList(newList);\r\n  };\r\n\r\n\r\n  if (allAssignees && !assigneeList) {\r\n    setAssigneeList(allAssignees);\r\n  }\r\n\r\n\r\n    return (\r\n        <>\r\n             <input\r\n                            readOnly\r\n                            required\r\n                            type=\"text\"\r\n                            className=\"dropdown-trigger  align-right\"\r\n                            id=\"assignee\"\r\n                            data-target=\"dropdownAssginee\"\r\n                            placeholder=\"\"\r\n                            ref={assigneeRef}\r\n                            value={assigneeName}\r\n                          />\r\n\r\n                          <ul id=\"dropdownAssginee\" className=\"dropdown-content\">\r\n                            <li className=\"search-assignee-box\">\r\n                              <input\r\n                                type=\"text\"\r\n                                placeholder=\"Search Assignee\"\r\n                                onChange={searchAssignee}\r\n                              />\r\n                            </li>\r\n                            {!assigneeList\r\n                              ? null\r\n                              : assigneeList.map((user) => {\r\n                                  return (\r\n                                    <li\r\n                                      key={user._id}\r\n                                      onClick={() => assigneeSelected(user._id)}\r\n                                    >\r\n                                      <a className=\"indigo-text\" href=\"#!\">\r\n                                        {user.FirstName + \" \" + user.LastName}\r\n                                      </a>\r\n                                    </li>\r\n                                  );\r\n                                })}\r\n                          </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      allAssignees: state.users.users,\r\n      incidentData: state.incidents.IncidentSelected,\r\n      userId :state.userLogin.userId,  // logged in User Id  \r\n      IncidentDetailError : state.incidents.IncidentDetailError     // if api ERROR\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      getAllAssignees: () => dispatch(allUsers()),    \r\n      updateIncident: (parameters) => dispatch(updateIncident(parameters)),   \r\n        \r\n    };\r\n  };\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(AssigneeDropdown);","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Incidents\\Incident.js",["416"],"import React from 'react';\r\nimport {  useHistory  } from 'react-router-dom';\r\nimport { removeIncidentData } from \"../../store/actions/incidentsActions\";\r\nimport { connect  } from 'react-redux';\r\nimport '../../styles/IncidentListing.css';\r\nimport moment from \"moment\";;\r\n\r\nfunction Incident({incident, dispatch, getUserNameById}) {\r\n\r\n  const history = useHistory();\r\n\r\n  const openIncident = (id) => {  \r\n    dispatch(removeIncidentData()); // So that user does not see old data that is stored in redux (and local storage)\r\n    let path = '/Incident/' + id;      \r\n      history.push(path);\r\n  }\r\n\r\n  const statusName = (status) => {\r\n    switch(status){\r\n      case \"N\":\r\n        return \"New\";\r\n      case \"C\":\r\n        return \"Close\";\r\n      case \"A\":\r\n        return \"Approved\";\r\n      case \"I\":\r\n        return \"In Progress\";\r\n      default:\r\n        return status;\r\n    }\r\n  }\r\n\r\n  const dateDifference = (date1 , date2) =>{\r\n   \r\n      const diffTime = Math.abs(date2 - date1);\r\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)); \r\n     // console.log(diffTime + \" milliseconds\");\r\n     // console.log(diffDays + \" days\");\r\n     return diffDays;\r\n  }\r\n\r\n  let currentDate = new Date();\r\n  const dueDateClass = (new Date(incident.DueDate)) < currentDate ? \"red-text text-darken-2\" : \"green-text text-darken-2\";\r\n  \r\n    return (\r\n      <tr >\r\n        \r\n        <td\r\n          className=\"tbl-title\"\r\n          title={incident.Title}\r\n        >\r\n         <span className=\"indigo-text darken-4\" onClick = { () => openIncident(incident._id) }>\r\n               {incident.Title.length > 50 ? incident.Title.slice(0,50) + \" ...\" : incident.Title }\r\n         </span>\r\n        </td>\r\n        <td\r\n          className=\"tbl-description\"\r\n          title={incident.Description}\r\n        >\r\n          {incident.Description.length > 30 ? incident.Description.slice(0,30) + \" ...\" : incident.Description }\r\n        </td>\r\n        <td>{getUserNameById(incident.AssignedTo)}</td>\r\n        <td>{getUserNameById(incident.CreatedBy)}</td>\r\n        <td><span title= {moment(incident.createdAt).format(\"MMMM DD YYYY, h:mm:ss a\")}>{moment(incident.createdAt).fromNow() } </span></td>\r\n        <td><span className={dueDateClass} title= {moment(incident.DueDate).format(\"MMMM DD YYYY, h:mm:ss a\")}>{moment(incident.DueDate).fromNow() } </span></td>\r\n        <td>{statusName(incident.Status)}</td>\r\n      </tr>\r\n    );\r\n}\r\n\r\nexport default connect()(Incident);","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Pages.js",["417","418","419","420","421","422","423"],"D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Users\\User.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Incidents\\Dashboard\\OldestOpen.js",["424","425","426"],"import React ,{useEffect, useState} from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { GetOldest5UnresolvedIncidents } from '../../../store/actions/dashboardActions';\r\nimport moment from \"moment\";\r\nimport {  useHistory  } from 'react-router-dom';\r\n\r\nfunction FiveOldestOpenIncidents({Oldest5UnresolvedIncidents, getOldest5UnresolvedIncidents}) {\r\n\r\n  useEffect(() => {\r\n    getOldest5UnresolvedIncidents();\r\n}, [])\r\n\r\nif(Oldest5UnresolvedIncidents == null || Oldest5UnresolvedIncidents.length===0 )\r\n return <h3>Loading...</h3>\r\n\r\n    return (\r\n      <div className=\"col s12 m12 l6\">\r\n        <div className=\"widget\">\r\n          <h5> 5 Oldest Unresolved Incidents</h5>\r\n\r\n          {\r\n            Oldest5UnresolvedIncidents.map(incident => {\r\n              return (\r\n                <Incident incident={incident} />\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst Incident = ({incident, dispatch}) => {\r\n\r\n  const statusName = (status) => {\r\n    switch(status){\r\n      case \"N\":\r\n        return \"New\";\r\n      case \"C\":\r\n        return \"Close\";\r\n      case \"A\":\r\n        return \"Approved\";\r\n      case \"I\":\r\n        return \"In Progress\";\r\n      default:\r\n        return status;\r\n    }\r\n  }\r\n\r\n  const history = useHistory();\r\n  const openIncident = (id) => {  \r\n  //  dispatch(removeIncidentData()); // So that user does not see old data that is stored in redux (and local storage)\r\n    let path = '/Incident/' + id;      \r\n      history.push(path);\r\n  }\r\n\r\n    return (\r\n      <div className=\"incident\">\r\n        <div className=\"time-status\">\r\n        <span className=\"timestamp\"\r\n          title={moment(incident.createdAt).format(\"MMMM DD YYYY, h:mm:ss a\")}\r\n        >\r\n          {moment(incident.createdAt).fromNow()}{\" \"}\r\n        </span>\r\n         \r\n          <span className=\"status\">\r\n            {statusName(incident.Status)}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"title\">\r\n          <a onClick={()=> openIncident(incident._id)} >\r\n            {incident.Title}\r\n          </a>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {        \r\n  return{   \r\n      userId :state.userLogin.userId,  // logged in User Id  \r\n      Oldest5UnresolvedIncidents: state.dashboard.Oldest5UnresolvedIncidentsData\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getOldest5UnresolvedIncidents: () => dispatch(GetOldest5UnresolvedIncidents()),     \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FiveOldestOpenIncidents);\r\n","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Incidents\\Dashboard\\DayByDayCount.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Incidents\\Dashboard\\MostAssignedByUser.js",["427","428"],"import React, {useEffect} from 'react'\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport {GetMostAssignedToUsers} from '../../../store/actions/dashboardActions';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction MostAssignedByUser({MostAssignedIncidentsData, getMostAssignedToUsers}) {\r\n\r\n  useEffect(() => {\r\n    getMostAssignedToUsers();\r\n  }, []);\r\n\r\n   if(MostAssignedIncidentsData.length ===0 || MostAssignedIncidentsData == null )\r\n   return (<h3>loading..</h3>);\r\n//console.log(\"MostAssignedIncidentsData\", MostAssignedIncidentsData[0].Name);\r\n  let data = [];\r\n\r\n  try{\r\n    let colorIndex = 0;\r\n    MostAssignedIncidentsData.forEach(d => {\r\n      let color = \"\";\r\n      switch(colorIndex){\r\n        case 0:\r\n          color = \"#B71C1C\";\r\n          break;\r\n          case 1:\r\n          color = \"#E53935\";\r\n          break;\r\n          case 2:\r\n          color = \"#EF5350\";\r\n          break;\r\n          case 3:\r\n          color = \"#E57373\";\r\n          break;\r\n          case 4:\r\n          color = \"#FFCDD2\";\r\n          break;\r\n        default:\r\n          color = \"green\";\r\n      };\r\n      colorIndex++;\r\n      data.push(\r\n        { name: d.Name, y: parseInt(d.Count), color:color }\r\n      )\r\n    });  \r\n\r\n  }\r\n  catch(err){\r\n    console.log(\"error\", err);\r\n  }\r\n\r\n    const options = {\r\n        title: {\r\n          text: 'My chart'\r\n        },\r\n        chart: {    \r\n          type: 'bar',\r\n          height: (70) + '%',\r\n          //width: (100) + '%',\r\n         },\r\n         title:{\r\n            text:''\r\n        },\r\n        credits:\r\n        {\r\n            enabled: false\r\n        },\r\n        legend: {\r\n            enabled: false\r\n        },\r\n        yAxis: {\r\n            title: {\r\n                text: ''\r\n            }\r\n        },\r\n    \r\n        xAxis: {\r\n            type: 'category',\r\n            min: 0,\r\n            labels: {\r\n                animate: true\r\n            }\r\n        },\r\n      \r\n         series: [{\r\n          name: '',\r\n          dataSorting: {\r\n            enabled: true,\r\n            sortKey: 'y'\r\n        },\r\n          data: data\r\n      }]\r\n      }\r\n\r\n    return (\r\n      <div className=\"col s12 m12 l6 widget\">\r\n        <div className=\"\">\r\n          <h5> Most Assigned To Users</h5>\r\n          <HighchartsReact highcharts={Highcharts} options={options} />\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {        \r\n  return{   \r\n      userId :state.userLogin.userId,  // logged in User Id  \r\n      MostAssignedIncidentsData: state.dashboard.MostAssignedIncidentsData\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getMostAssignedToUsers: () => dispatch(GetMostAssignedToUsers()),     \r\n  }\r\n}\r\n\r\n// create \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MostAssignedByUser);\r\n\r\n//please invert binary tree\r\n","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Incidents\\Dashboard\\LastFive.js",["429","430","431"],"import React ,{useEffect, useState} from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { GetLast5Incidents } from '../../../store/actions/dashboardActions';\r\nimport moment from \"moment\";\r\n\r\nimport {  useHistory  } from 'react-router-dom';\r\n\r\nfunction LastFive({Last5IncidentsData, getLast5IncidentsData, dispatch}) {\r\n\r\n  useEffect(() => {\r\n    getLast5IncidentsData();\r\n}, [])\r\n\r\n\r\nif(Last5IncidentsData == null || Last5IncidentsData.length===0 )\r\n return <h3>Loading...</h3>\r\n\r\n\r\n    return (\r\n      <div className=\"col s12 m12 l6\">\r\n        <div className=\"widget\">\r\n          <h5> Last 5 Incidents</h5>\r\n\r\n          {\r\n            Last5IncidentsData.map(incident => {\r\n              return (\r\n                <Incident incident={incident} />\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst Incident = ({incident, dispatch}) => {\r\n\r\n  const statusName = (status) => {\r\n    switch(status){\r\n      case \"N\":\r\n        return \"New\";\r\n      case \"C\":\r\n        return \"Close\";\r\n      case \"A\":\r\n        return \"Approved\";\r\n      case \"I\":\r\n        return \"In Progress\";\r\n      default:\r\n        return status;\r\n    }\r\n  }\r\n\r\n  const history = useHistory();\r\n  const openIncident = (id) => {  \r\n  //  dispatch(removeIncidentData()); // So that user does not see old data that is stored in redux (and local storage)\r\n    let path = '/Incident/' + id;      \r\n      history.push(path);\r\n  }\r\n\r\n    return (\r\n      <div className=\"incident\">\r\n        <div className=\"time-status\">\r\n        <span className=\"timestamp\"\r\n          title={moment(incident.createdAt).format(\"MMMM DD YYYY, h:mm:ss a\")}\r\n        >\r\n          {moment(incident.createdAt).fromNow()}{\" \"}\r\n        </span>\r\n         \r\n          <span className=\"status\">\r\n            {statusName(incident.Status)}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"title\">\r\n          <a onClick={()=> openIncident(incident._id)} >\r\n            {incident.Title}\r\n          </a>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {        \r\n  return{   \r\n      userId :state.userLogin.userId,  // logged in User Id  \r\n      Last5IncidentsData: state.dashboard.Last5IncidentsData\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getLast5IncidentsData: () => dispatch(GetLast5Incidents()),     \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LastFive);\r\n","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Incidents\\Dashboard\\OverallWidget.js",["432"],"import React ,{useEffect, useState} from 'react'\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport {GetOverallWidget} from '../../../store/actions/dashboardActions';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction OverallWidget({overallWidgetData, getOverallWidgetData}) {\r\n    const [chartOptions, setChartOptions] = useState({});\r\n\r\n    useEffect(() => {\r\n        getOverallWidgetData();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(\"overallWidgetData\", overallWidgetData);\r\n        const options = {\r\n            chart: {\r\n                type: 'pie',\r\n                height: (70) + '%',\r\n            },\r\n            title: {\r\n                text: ''\r\n            },\r\n            credits:\r\n            {\r\n                enabled: false\r\n            },\r\n            tooltip: {\r\n                pointFormat: '{series.name}: <b>{point.y} ({point.percentage:.1f}%)</b>'\r\n            },\r\n            plotOptions: {\r\n                pie: {\r\n                    allowPointSelect: true,\r\n                    cursor: 'pointer',\r\n                    dataLabels: {\r\n                        enabled: false\r\n                    },\r\n                    showInLegend: true\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Share',\r\n                data: [\r\n                    { name: 'New', y: overallWidgetData.New,   color: {\r\n                        linearGradient:  [0, 0, 0, 300],\r\n                        stops: [\r\n                            [0, 'rgba(245,124,0,1)'],\r\n                            [1, 'rgba(255,226,0,1)']\r\n                        ]\r\n                    } },\r\n                    //{ name: 'In Progress', y: overallWidgetData.InProgress, color: '#1976D2' },\r\n                    { name: 'In Progress', y: overallWidgetData.InProgress, color: {\r\n                        linearGradient:  [0, 0, 0, 300],\r\n                        stops: [\r\n                            [0, 'rgba(25,118,210,1)'],\r\n                            [1, 'rgba(0,237,255,1)']\r\n                        ]\r\n                    } },\r\n                    { name: 'Closed', y: overallWidgetData.Closed,  color: {\r\n                        linearGradient:  [0, 0, 0, 300],\r\n                        stops: [\r\n                            [0, 'rgba(67,160,71,1)'],\r\n                            [1, 'rgba(0,255,187,1)']\r\n                        ]\r\n                    } },\r\n                   // { name: 'Closed', y: overallWidgetData.Closed, color: '#43A047' },\r\n                    { name: 'Approved', y: overallWidgetData.Approved,  color: {\r\n                        linearGradient:  [0, 0, 0, 300],\r\n                        stops: [\r\n                            [0, 'rgba(27,94,32,1)'],\r\n                            [1, 'rgba(19,255,0,1)']\r\n                        ]\r\n                    } },\r\n                    { name: 'Late', y: overallWidgetData.Late,  color: {\r\n                        linearGradient:  [0, 0, 0, 300],\r\n                        stops: [\r\n                            [0, 'rgba(183,28,28,1)'],\r\n                            [1, 'rgba(255,140,0,1)']\r\n                        ]\r\n                    } }\r\n                ]\r\n            }]\r\n        }\r\n\r\n        setChartOptions(options);\r\n    }, [overallWidgetData])\r\n\r\n\r\n    return (\r\n        <div className=\"col s12 m12 l6 widget\">\r\n            <h5> Overall</h5>\r\n            <HighchartsReact highcharts={Highcharts} options={chartOptions} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {        \r\n    return{   \r\n        userId :state.userLogin.userId,  // logged in User Id  \r\n        overallWidgetData: state.dashboard.OverallWidgetData\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getOverallWidgetData: () => dispatch(GetOverallWidget()),     \r\n    }\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(OverallWidget);\r\n\r\n","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Incidents\\Dashboard\\KPIBar.js",["433","434"],"import React,{useEffect, useState} from 'react'\r\nimport '../../../styles/kpibar.css'\r\nimport { GetKPI } from '../../../store/actions/dashboardActions';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction KPIBar({getKPIData, userId, kpiData}) {\r\n \r\n  //console.log(\"kpiData\",kpiData);\r\n  \r\n  useEffect(() => {    \r\n    getKPIData(userId); \r\n  }, [])\r\n\r\n  if(kpiData == null || kpiData === undefined)\r\n  return <h2>Loading</h2>\r\n \r\n    return (     \r\n      <div className=\"row kpibar\">       \r\n        <KPI value={kpiData.New} text=\"NEW\" color=\"new-color\" />\r\n        <KPI value={kpiData.InProgress} text=\"IN PROGRESS\" color=\"inprogress-color\" />\r\n        <KPI value={kpiData.Closed} text=\"CLOSED\" color=\"closed-color\" />\r\n        <KPI value={kpiData.Approved} text=\"APPROVED\" color=\"approved-color\" />\r\n        <KPI value={kpiData.Late} text=\"LATE\" color=\"late-color\"/>\r\n        <KPI value={kpiData.AssignedToMe} text=\"ASSINGED TO YOU\" color=\"assignedToMe-color\"/>        \r\n    </div>\r\n    );\r\n}\r\n\r\nfunction KPI({value, text, color}) {\r\n  return (\r\n    <div className=\"col l2 m6 s6\">\r\n      <div className={\"kpi \" + color}  >\r\n        <div className=\"kpi-value\">{value}</div>\r\n        <div className=\"kpi-text\">{text}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {        \r\n  return{   \r\n      userId :state.userLogin.userId,  // logged in User Id  \r\n      kpiData: state.dashboard.KPIData\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      getKPIData : (userId) => dispatch(GetKPI(userId)),     \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(KPIBar);\r\n\r\n","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\store\\actions\\userLoginActions.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\store\\actions\\incidentsActions.js",["435","436"],"import axios from 'axios';\r\nimport { incidentsUrls } from \"../../api/apiURLs\";\r\nimport { incidentUpdatedSignalR } from \"../../signalR/sender\";\r\nimport qs from 'qs';\r\n\r\nexport var cancel;\r\n\r\nexport const incidentsWithPage = (parameters) => {\r\n    return (dispatch, getState) => {  \r\n     \r\n        axios.defaults.headers = {'x-access-token': `${getState().userLogin.token + \"\"}`};\r\n        const url = incidentsUrls.incidentsWithPageUrl +\r\n                    \"PageSize=\" + parameters.PageSize +\"&PageNumber=\" + parameters.PageNumber \r\n                    + \"&SortBy=q&SortDirection=q&Search=\" + parameters.Search;     \r\n        axios({\r\n          method: \"GET\",\r\n          url: url,\r\n          cancelToken: new axios.CancelToken((c) => (cancel = c)),\r\n        })\r\n          .then((response) => {\r\n            const data = response.data;\r\n            dispatch({ type: \"INCIDENTS_WITH_PAGE\", data });\r\n          })\r\n          .catch((err) => {\r\n            if (axios.isCancel(err)) {\r\n              console.log(\"Request canceled\", err.message);\r\n              return;\r\n            }\r\n            console.log(err.message);\r\n            const data = err.message;\r\n            dispatch({ type: \"INCIDENTS_WITH_PAGE_ERROR\", data });\r\n          });    \r\n    }\r\n  }\r\n\r\n  export const addNewIncident = (formData) => {\r\n    return (dispatch, getState) => {      \r\n      axios.defaults.headers = {'x-access-token': `${getState().userLogin.token + \"\"}`};\r\n        const url = incidentsUrls.addNewIncidentUrl\r\n    \r\n        axios({\r\n          method: 'post',          \r\n          url :incidentsUrls.addNewIncidentUrl,\r\n          headers: {\r\n            'Content-type': 'multipart/form-data',\r\n           // 'Content-Length': formData.length\r\n                  }, \r\n          data: formData//qs.stringify(formData)\r\n        })\r\n          .then((response)=>{ \r\n             const data = true;\r\n             console.log(response);\r\n             incidentUpdatedSignalR(response.data.Id);\r\n             dispatch({ type: 'NEW_INCIDENT_STATUS', data });\r\n          })          \r\n          .catch((err)=>{  \r\n            const data = err.message;         \r\n            dispatch({ type: 'NEW_INCIDENT_ERROR', data });\r\n          });   \r\n    }\r\n  }\r\n\r\n  export const addNewComment = (formData) => {\r\n    return (dispatch, getState) => {      \r\n      axios.defaults.headers = {'x-access-token': `${getState().userLogin.token + \"\"}`};\r\n        const url = incidentsUrls.addNewCommentUrl\r\n        axios.post(url, formData)\r\n          .then((response)=>{            \r\n             const comment = response.data;\r\n             //console.log(\"Comment\", comment);\r\n              dispatch({ type: 'ADD_NEW_COMMENT', data: comment });\r\n              incidentUpdatedSignalR(comment.IncidentId);\r\n          })\r\n          .catch((err)=>{                 \r\n            console.log(err.message);\r\n            const data = \"while adding comment: \" + err.message;\r\n            dispatch({ type: 'INCIDENTS_BY_ID_ERROR', data });\r\n          });   \r\n    }\r\n  }\r\n\r\n  export const deleteComment = (commentId, incidentId, userId) => {\r\n    return (dispatch, getState) => {      \r\n      axios.defaults.headers = {'x-access-token': `${getState().userLogin.token + \"\"}`};\r\n        const url = incidentsUrls.deleteCommentUrl\r\n                    + \"commentId=\" + commentId\r\n                    + \"&incidentId=\" + incidentId\r\n                    + \"&userId=\" + userId\r\n        axios.get(url)\r\n          .then((response)=>{    \r\n              dispatch({ type: 'COMMENT_DELETED', data: commentId });\r\n              incidentUpdatedSignalR(incidentId);\r\n          })\r\n          .catch((err)=>{                 \r\n            console.log(err.message);\r\n            const data = \"while delteing comment: \" + err.message;\r\n            dispatch({ type: 'INCIDENTS_BY_ID_ERROR', data });\r\n          });   \r\n    }\r\n  }\r\n\r\n  export const updateIncident = (parameters) => {\r\n    return (dispatch, getState) => {      \r\n     // console.log(comment);\r\n     axios.defaults.headers = {'x-access-token': `${getState().userLogin.token + \"\"}`};     \r\n        axios({\r\n          method: 'post',          \r\n          url :incidentsUrls.updateIncidentUrl,\r\n          headers: { 'Content-type': 'application/json'}, \r\n         //json: true,\r\n          data: parameters\r\n        })\r\n          .then((response)=>{  \r\n              dispatch({ type: 'INCIDENTS_UPDATE', parameters });\r\n              incidentUpdatedSignalR(parameters.IncidentId);\r\n          })\r\n          .catch((err)=>{                 \r\n            console.log(err.message);\r\n            const data = \"while updating incident: \" + err.message;\r\n            dispatch({ type: 'INCIDENTS_BY_ID_ERROR', data });\r\n          });   \r\n    }\r\n  }\r\n\r\n  export const updateComment = (comment) => {\r\n    return (dispatch, getState) => { \r\n       axios.defaults.headers = {'x-access-token': `${getState().userLogin.token + \"\"}`};\r\n        const url = incidentsUrls.updateCommentUrl\r\n        axios.post(url, comment)\r\n          .then((response)=>{  \r\n            dispatch(getIncidentById(comment.IncidentId)); \r\n          incidentUpdatedSignalR(comment.IncidentId);\r\n          })\r\n          .catch((err)=>{                 \r\n            console.log(err.message);\r\n            const data = \"while updating comment: \" + err.message;\r\n            dispatch({ type: 'INCIDENTS_BY_ID_ERROR', data });\r\n          });   \r\n    }\r\n  }\r\n\r\n\r\n  export const getIncidentById = (incidentId) => {\r\n    return (dispatch, getState) => {  \r\n       axios.defaults.headers = {'x-access-token': `${getState().userLogin.token + \"\"}`};\r\n        const url = incidentsUrls.getIncidentByIdUrl + incidentId; \r\n        axios.get(url)\r\n          .then((response)=>{            \r\n             const data = response.data;                     \r\n              dispatch({ type: 'INCIDENTS_BY_ID', data });\r\n          })\r\n          .catch((err)=>{                 \r\n            console.log(err.message);\r\n            const data = \"while getting data for incident: \" + err.message;\r\n            dispatch({ type: 'INCIDENTS_BY_ID_ERROR', data });\r\n          });   \r\n    }\r\n  }\r\n\r\n  export const deleteAttachment = (type, userid, incidentId , file) => {\r\n    return (dispatch, getState) => {  \r\n        axios.defaults.headers = {'x-access-token': `${getState().userLogin.token + \"\"}`};\r\n        const url = incidentsUrls.deleteAttachmentUrl\r\n                + \"type=\" + type\r\n                + \"&commentId=\" + file.CommentId \r\n                + \"&incidentId=\" + incidentId\r\n                + \"&userId=\" + userid\r\n                + \"&fileId=\" + file._id\r\n                + \"&filename=\" + file.FileName\r\n                + \"&contentType=\" + file.ContentType\r\n        axios.get(url)\r\n          .then((response)=>{      \r\n                if (type === \"comment\")\r\n                  dispatch({ type: \"COMMENT_ATTACHMENT_DELETED\", data: file });\r\n                else\r\n                dispatch({ type: \"INCIDENT_ATTACHMENT_DELETED\", data: file });\r\n          })\r\n          .catch((err)=>{                 \r\n            console.log(err.message);\r\n            const data = \"while delteing attachment: \" + err.message;\r\n            dispatch({ type: 'INCIDENTS_BY_ID_ERROR', data });\r\n          });   \r\n    }\r\n  }\r\n\r\n  export const removeIncidentData = () => {       \r\n         return   { type: 'REMOVE_INCIDENT_DATA', data : null};\r\n         \r\n  }\r\n\r\n","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\store\\actions\\usersActions.js",["437"],"import axios from 'axios';\r\nimport { usersUrls } from \"../../api/apiURLs\";\r\n\r\nexport const  allUsers = (parameters) => {\r\n    return (dispatch, getState) => {  \r\n     \r\n      axios.defaults.headers = {'x-access-token': `${getState().userLogin.token + \"\"}`};\r\n        const url = usersUrls.allUsersUrl\r\n        axios.get(url)\r\n          .then((response)=>{            \r\n             const users = response.data;\r\n              dispatch({ type: 'ALL_USERS', users });\r\n          })\r\n          .catch((err)=>{                 \r\n                   console.log(err);\r\n          });\r\n    \r\n    }\r\n  }\r\n\r\n  export const userssWithPage = (parameters) => {\r\n    return (dispatch, getState) => {  \r\n     \r\n      axios.defaults.headers = {'x-access-token': `${getState().userLogin.token + \"\"}`};\r\n        const url = usersUrls.userssWithPageUrl +\r\n                    \"PageSize=\" + parameters.PageSize +\"&PageNumber=\" + parameters.PageNumber \r\n                    + \"&SortBy=q&SortDirection=q&Search=\" + parameters.Search;\r\n        axios.get(url)\r\n          .then((response)=>{            \r\n             const data = response.data;                   \r\n              dispatch({ type: 'USERS_WITH_PAGE', data });\r\n          })\r\n          .catch((err)=>{                 \r\n                   console.log(err);\r\n          });    \r\n    }\r\n  }\r\n\r\n  export const addNewUser = (formData) => {\r\n    return (dispatch, getState) => {  \r\n     \r\n      axios.defaults.headers = {'x-access-token': `${getState().userLogin.token + \"\"}`};\r\n        const url = usersUrls.addNewUserUrl \r\n        axios.post(url, formData)\r\n          .then((response)=>{            \r\n             const data = response.data;\r\n            //  dispatch({ type: 'INCIDENTS_WITH_PAGE', data });\r\n          })\r\n          .catch((err)=>{                 \r\n                   console.log(err);\r\n          });\r\n    \r\n    }\r\n  }\r\n\r\n","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\store\\actions\\notificationsActions.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\api\\apiURLs.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\components\\Incidents\\Comment.js",["438","439","440","441","442","443"],"import { React, useEffect, useState, useRef } from \"react\";\r\nimport moment from \"moment\";\r\nimport { deleteAttachment, updateComment , deleteComment } from \"../../store/actions/incidentsActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { incidentsUrls } from \"../../api/apiURLs\";\r\n\r\n\r\nfunction Comment({\r\n  comment,\r\n  getNameById,\r\n  incidentId,\r\n  userId,\r\n  deleteAttachment,\r\n  updateComment,\r\n  deleteComment,\r\n  socket\r\n}) {\r\n  \r\n  const [editComment, setEditComment] = useState(false);\r\n  const [commentText, setCommentText] = useState(comment.CommentText);\r\n  const [files, setFiles] = useState(null);\r\n\r\n  const commentEditClick = () => {\r\n    setEditComment(!editComment);\r\n    setCommentText(comment.CommentText);\r\n  };\r\n  const commentEditCancel = () => {\r\n    setCommentText(comment.CommentText);\r\n    setEditComment(false);\r\n  };\r\n\r\n  const commentEditSave = () => {\r\n    let changedComment = {\r\n      _id : comment._id,\r\n      IncidentId : incidentId,\r\n      UserId : userId,\r\n      createAt : new Date(),\r\n      CommentText : commentText,\r\n      //attachments :[]\r\n    }\r\n    updateComment(changedComment);\r\n    setEditComment(false);\r\n  };\r\n\r\n  const downloadFile = (file) => {\r\n    window.open(\r\n      incidentsUrls.downloadFileUrl + \r\n      \"type=comment\" +\r\n        \"&commentId=\" +\r\n        file.CommentId +\r\n        \"&incidentId=\" +\r\n        incidentId +\r\n        \"&filename=\" +\r\n        file.FileName +\r\n        \"&contentType=\" +\r\n        file.ContentType\r\n    );\r\n  };\r\n\r\n  const deleteFile = (file) => {\r\n    if (\r\n      window.confirm(\r\n        \"Are you sure you want to delete this attachment.\" + file.FileName\r\n      )\r\n    ) {\r\n      deleteAttachment(\"comment\", userId, incidentId, file);  \r\n    }\r\n  };\r\n\r\n  const deleteThisComment = () => {\r\n    if (\r\n      window.confirm(\r\n        \"Are you sure you want to delete this comment.\"\r\n      )\r\n    ) {\r\n      deleteComment(comment._id,incidentId, userId );  \r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <p className=\"commentHeader darkslategrayText\">\r\n        <a className=\"username\">{getNameById(comment.UserId)}</a> added a\r\n        comment. -{\" \"}\r\n        <span\r\n          title={moment(comment.createdAt).format(\"MMMM DD YYYY, h:mm:ss a\")}\r\n        >\r\n          {moment(comment.createdAt).fromNow()}{\" \"}\r\n        </span>\r\n        <span className=\"right\">\r\n          <i\r\n            title=\"Edit Comment\"\r\n            className=\"actions-icon material-icons indigo-text darken-4 inline-icon\"\r\n            onClick={commentEditClick}\r\n          >\r\n            edit\r\n          </i>\r\n          <i\r\n            title=\"Delete Comment\"\r\n            className=\"actions-icon material-icons red-text inline-icon\"\r\n            onClick = {deleteThisComment}\r\n          >\r\n            cancel\r\n          </i>\r\n        </span>\r\n      </p>\r\n      {!editComment ? (\r\n        <p className=\"darkslategrayText\">{comment.CommentText}</p>\r\n      ) : (\r\n        <p className=\"comment-edit-box\">\r\n          <textarea className=\"materialize-textarea\" onChange={(e) => setCommentText(e.target.value)}></textarea>\r\n\r\n          <i\r\n            className=\"right green-text actions-icon material-icons\"\r\n            title=\"Save\"\r\n            onClick={commentEditSave}\r\n          >\r\n            check\r\n          </i>\r\n          <i\r\n            className=\"right yellow-text text-darken-2 actions-icon material-icons\"\r\n            title=\"Cancel\"\r\n            onClick={commentEditCancel}\r\n          >\r\n            cancel\r\n          </i>\r\n        </p>\r\n      )}{\" \"}\r\n      {/* end of edit comment - if */}\r\n      <p>\r\n        <ul className=\"commentFiles\">\r\n          {!comment.attachments\r\n            ? null\r\n            : comment.attachments.map((file) => {\r\n                return (\r\n                  <li key={file._id}>\r\n                    <a className=\"center indigo-text darken-4\">\r\n                      {!editComment ? null : (\r\n                        <i\r\n                          title=\"Remove\"\r\n                          className=\"actions-icon material-icons red-text inline-icon\"\r\n                          onClick={() => deleteFile(file)}\r\n                        >\r\n                          cancel\r\n                        </i>\r\n                      )}\r\n                      <span\r\n                        title={file.FileName}\r\n                        onClick={() => downloadFile(file)}\r\n                      >\r\n                        {file.FileName.length > 40\r\n                          ? file.FileName.slice(0, 40) + \"...\"\r\n                          : file.FileName}\r\n                      </span>\r\n                    </a>\r\n                  </li>\r\n                );\r\n              })}\r\n        </ul>\r\n      </p>\r\n      <hr></hr>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    allAssignees: state.users.users,\r\n    incidentData: state.incidents.IncidentSelected,\r\n    userId :state.userLogin.userId,  // logged in User Id       \r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {   \r\n    deleteAttachment : (type, userid, incidentId , file) => dispatch(deleteAttachment(type, userid, incidentId ,file)),\r\n    updateComment : (comment) => dispatch(updateComment(comment)),\r\n    deleteComment : (commentId, incidentId, userId) => dispatch(deleteComment(commentId, incidentId, userId))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment);\r\n","D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\store\\actions\\dashboardActions.js",[],"D:\\GitHub\\__Mine\\IM\\IM_MERN_React\\src\\signalR\\sender.js",[],{"ruleId":"444","severity":1,"message":"445","line":25,"column":11,"nodeType":"446","endLine":25,"endColumn":77},{"ruleId":"444","severity":1,"message":"447","line":48,"column":14,"nodeType":"446","endLine":48,"endColumn":17},{"ruleId":"444","severity":1,"message":"447","line":64,"column":18,"nodeType":"446","endLine":64,"endColumn":21},{"ruleId":"444","severity":1,"message":"445","line":68,"column":15,"nodeType":"446","endLine":68,"endColumn":50},{"ruleId":"448","severity":1,"message":"449","line":21,"column":8,"nodeType":"450","endLine":21,"endColumn":10,"suggestions":"451"},{"ruleId":"448","severity":1,"message":"449","line":37,"column":8,"nodeType":"450","endLine":37,"endColumn":38,"suggestions":"452"},{"ruleId":"453","severity":1,"message":"454","line":1,"column":17,"nodeType":"455","messageId":"456","endLine":1,"endColumn":23},{"ruleId":"453","severity":1,"message":"457","line":3,"column":8,"nodeType":"455","messageId":"456","endLine":3,"endColumn":9},{"ruleId":"448","severity":1,"message":"449","line":27,"column":8,"nodeType":"450","endLine":27,"endColumn":38,"suggestions":"458"},{"ruleId":"448","severity":1,"message":"459","line":27,"column":8,"nodeType":"450","endLine":27,"endColumn":10,"suggestions":"460"},{"ruleId":"453","severity":1,"message":"461","line":29,"column":10,"nodeType":"455","messageId":"456","endLine":29,"endColumn":18},{"ruleId":"448","severity":1,"message":"462","line":54,"column":6,"nodeType":"450","endLine":54,"endColumn":23,"suggestions":"463"},{"ruleId":"448","severity":1,"message":"464","line":69,"column":6,"nodeType":"450","endLine":69,"endColumn":20,"suggestions":"465"},{"ruleId":"466","severity":1,"message":"467","line":94,"column":28,"nodeType":"468","messageId":"469","endLine":94,"endColumn":29},{"ruleId":"444","severity":1,"message":"447","line":310,"column":23,"nodeType":"446","endLine":310,"endColumn":47},{"ruleId":"448","severity":1,"message":"470","line":45,"column":8,"nodeType":"450","endLine":45,"endColumn":10,"suggestions":"471"},{"ruleId":"453","severity":1,"message":"472","line":8,"column":8,"nodeType":"455","messageId":"456","endLine":8,"endColumn":21},{"ruleId":"448","severity":1,"message":"473","line":34,"column":7,"nodeType":"450","endLine":34,"endColumn":9,"suggestions":"474"},{"ruleId":"448","severity":1,"message":"475","line":38,"column":8,"nodeType":"450","endLine":38,"endColumn":16,"suggestions":"476"},{"ruleId":"444","severity":1,"message":"447","line":44,"column":15,"nodeType":"446","endLine":44,"endColumn":19},{"ruleId":"453","severity":1,"message":"477","line":33,"column":9,"nodeType":"455","messageId":"456","endLine":33,"endColumn":23},{"ruleId":"444","severity":1,"message":"447","line":17,"column":19,"nodeType":"446","endLine":17,"endColumn":53},{"ruleId":"444","severity":1,"message":"447","line":22,"column":19,"nodeType":"446","endLine":22,"endColumn":51},{"ruleId":"444","severity":1,"message":"447","line":27,"column":19,"nodeType":"446","endLine":27,"endColumn":52},{"ruleId":"453","severity":1,"message":"478","line":1,"column":17,"nodeType":"455","messageId":"456","endLine":1,"endColumn":26},{"ruleId":"453","severity":1,"message":"479","line":2,"column":8,"nodeType":"455","messageId":"456","endLine":2,"endColumn":14},{"ruleId":"453","severity":1,"message":"480","line":7,"column":8,"nodeType":"455","messageId":"456","endLine":7,"endColumn":22},{"ruleId":"453","severity":1,"message":"481","line":20,"column":9,"nodeType":"455","messageId":"456","endLine":20,"endColumn":16},{"ruleId":"453","severity":1,"message":"482","line":2,"column":27,"nodeType":"455","messageId":"456","endLine":2,"endColumn":43},{"ruleId":"448","severity":1,"message":"470","line":15,"column":10,"nodeType":"450","endLine":15,"endColumn":12,"suggestions":"483"},{"ruleId":"453","severity":1,"message":"484","line":1,"column":27,"nodeType":"455","messageId":"456","endLine":1,"endColumn":35},{"ruleId":"448","severity":1,"message":"485","line":11,"column":4,"nodeType":"450","endLine":11,"endColumn":6,"suggestions":"486"},{"ruleId":"444","severity":1,"message":"447","line":72,"column":11,"nodeType":"446","endLine":72,"endColumn":57},{"ruleId":"448","severity":1,"message":"487","line":11,"column":6,"nodeType":"450","endLine":11,"endColumn":8,"suggestions":"488"},{"ruleId":"489","severity":1,"message":"490","line":61,"column":10,"nodeType":"491","messageId":"492","endLine":61,"endColumn":15},{"ruleId":"453","severity":1,"message":"484","line":1,"column":27,"nodeType":"455","messageId":"456","endLine":1,"endColumn":35},{"ruleId":"448","severity":1,"message":"493","line":12,"column":4,"nodeType":"450","endLine":12,"endColumn":6,"suggestions":"494"},{"ruleId":"444","severity":1,"message":"447","line":75,"column":11,"nodeType":"446","endLine":75,"endColumn":57},{"ruleId":"448","severity":1,"message":"495","line":12,"column":8,"nodeType":"450","endLine":12,"endColumn":10,"suggestions":"496"},{"ruleId":"453","severity":1,"message":"484","line":1,"column":26,"nodeType":"455","messageId":"456","endLine":1,"endColumn":34},{"ruleId":"448","severity":1,"message":"497","line":12,"column":6,"nodeType":"450","endLine":12,"endColumn":8,"suggestions":"498"},{"ruleId":"453","severity":1,"message":"499","line":46,"column":20,"nodeType":"455","messageId":"456","endLine":46,"endColumn":24},{"ruleId":"453","severity":1,"message":"500","line":4,"column":8,"nodeType":"455","messageId":"456","endLine":4,"endColumn":10},{"ruleId":"453","severity":1,"message":"501","line":39,"column":15,"nodeType":"455","messageId":"456","endLine":39,"endColumn":18},{"ruleId":"453","severity":1,"message":"478","line":1,"column":17,"nodeType":"455","messageId":"456","endLine":1,"endColumn":26},{"ruleId":"453","severity":1,"message":"454","line":1,"column":38,"nodeType":"455","messageId":"456","endLine":1,"endColumn":44},{"ruleId":"453","severity":1,"message":"502","line":21,"column":10,"nodeType":"455","messageId":"456","endLine":21,"endColumn":15},{"ruleId":"453","severity":1,"message":"503","line":21,"column":17,"nodeType":"455","messageId":"456","endLine":21,"endColumn":25},{"ruleId":"444","severity":1,"message":"447","line":83,"column":9,"nodeType":"446","endLine":83,"endColumn":33},{"ruleId":"444","severity":1,"message":"447","line":137,"column":21,"nodeType":"446","endLine":137,"endColumn":64},{"ruleId":"504","replacedBy":"505"},{"ruleId":"506","replacedBy":"507"},{"ruleId":"508","severity":1,"message":"509","line":24,"column":13,"nodeType":"446","endLine":24,"endColumn":31},{"ruleId":"444","severity":1,"message":"445","line":27,"column":11,"nodeType":"446","endLine":27,"endColumn":77},{"ruleId":"444","severity":1,"message":"447","line":50,"column":14,"nodeType":"446","endLine":50,"endColumn":17},{"ruleId":"444","severity":1,"message":"447","line":66,"column":18,"nodeType":"446","endLine":66,"endColumn":21},{"ruleId":"508","severity":1,"message":"509","line":29,"column":15,"nodeType":"446","endLine":29,"endColumn":33},{"ruleId":"508","severity":1,"message":"509","line":34,"column":11,"nodeType":"446","endLine":34,"endColumn":64},{"ruleId":"453","severity":1,"message":"461","line":29,"column":10,"nodeType":"455","messageId":"456","endLine":29,"endColumn":18},{"ruleId":"448","severity":1,"message":"462","line":54,"column":6,"nodeType":"450","endLine":54,"endColumn":23,"suggestions":"510"},{"ruleId":"448","severity":1,"message":"464","line":69,"column":6,"nodeType":"450","endLine":69,"endColumn":20,"suggestions":"511"},{"ruleId":"466","severity":1,"message":"467","line":94,"column":28,"nodeType":"468","messageId":"469","endLine":94,"endColumn":29},{"ruleId":"444","severity":1,"message":"447","line":310,"column":23,"nodeType":"446","endLine":310,"endColumn":47},{"ruleId":"448","severity":1,"message":"449","line":21,"column":8,"nodeType":"450","endLine":21,"endColumn":10,"suggestions":"512"},{"ruleId":"448","severity":1,"message":"449","line":37,"column":8,"nodeType":"450","endLine":37,"endColumn":38,"suggestions":"513"},{"ruleId":"448","severity":1,"message":"449","line":27,"column":8,"nodeType":"450","endLine":27,"endColumn":38,"suggestions":"514"},{"ruleId":"448","severity":1,"message":"470","line":45,"column":8,"nodeType":"450","endLine":45,"endColumn":10,"suggestions":"515"},{"ruleId":"453","severity":1,"message":"454","line":1,"column":17,"nodeType":"455","messageId":"456","endLine":1,"endColumn":23},{"ruleId":"453","severity":1,"message":"457","line":3,"column":8,"nodeType":"455","messageId":"456","endLine":3,"endColumn":9},{"ruleId":"448","severity":1,"message":"459","line":27,"column":8,"nodeType":"450","endLine":27,"endColumn":10,"suggestions":"516"},{"ruleId":"453","severity":1,"message":"472","line":8,"column":8,"nodeType":"455","messageId":"456","endLine":8,"endColumn":21},{"ruleId":"448","severity":1,"message":"473","line":34,"column":7,"nodeType":"450","endLine":34,"endColumn":9,"suggestions":"517"},{"ruleId":"444","severity":1,"message":"447","line":17,"column":19,"nodeType":"446","endLine":17,"endColumn":53},{"ruleId":"444","severity":1,"message":"447","line":22,"column":19,"nodeType":"446","endLine":22,"endColumn":51},{"ruleId":"444","severity":1,"message":"447","line":27,"column":19,"nodeType":"446","endLine":27,"endColumn":52},{"ruleId":"453","severity":1,"message":"478","line":1,"column":17,"nodeType":"455","messageId":"456","endLine":1,"endColumn":26},{"ruleId":"453","severity":1,"message":"479","line":2,"column":8,"nodeType":"455","messageId":"456","endLine":2,"endColumn":14},{"ruleId":"453","severity":1,"message":"480","line":7,"column":8,"nodeType":"455","messageId":"456","endLine":7,"endColumn":22},{"ruleId":"453","severity":1,"message":"481","line":20,"column":9,"nodeType":"455","messageId":"456","endLine":20,"endColumn":16},{"ruleId":"453","severity":1,"message":"482","line":2,"column":27,"nodeType":"455","messageId":"456","endLine":2,"endColumn":43},{"ruleId":"448","severity":1,"message":"470","line":15,"column":10,"nodeType":"450","endLine":15,"endColumn":12,"suggestions":"518"},{"ruleId":"453","severity":1,"message":"477","line":33,"column":9,"nodeType":"455","messageId":"456","endLine":33,"endColumn":23},{"ruleId":"519","severity":1,"message":"520","line":23,"column":23,"nodeType":"468","messageId":"492","endLine":23,"endColumn":25},{"ruleId":"519","severity":1,"message":"520","line":27,"column":43,"nodeType":"468","messageId":"492","endLine":27,"endColumn":45},{"ruleId":"448","severity":1,"message":"521","line":53,"column":8,"nodeType":"450","endLine":53,"endColumn":16,"suggestions":"522"},{"ruleId":"448","severity":1,"message":"523","line":57,"column":8,"nodeType":"450","endLine":57,"endColumn":48,"suggestions":"524"},{"ruleId":"444","severity":1,"message":"447","line":76,"column":15,"nodeType":"446","endLine":76,"endColumn":19},{"ruleId":"444","severity":1,"message":"447","line":112,"column":37,"nodeType":"446","endLine":112,"endColumn":40},{"ruleId":"444","severity":1,"message":"447","line":114,"column":33,"nodeType":"446","endLine":114,"endColumn":36},{"ruleId":"453","severity":1,"message":"484","line":1,"column":27,"nodeType":"455","messageId":"456","endLine":1,"endColumn":35},{"ruleId":"448","severity":1,"message":"485","line":11,"column":4,"nodeType":"450","endLine":11,"endColumn":6,"suggestions":"525"},{"ruleId":"444","severity":1,"message":"447","line":72,"column":11,"nodeType":"446","endLine":72,"endColumn":57},{"ruleId":"448","severity":1,"message":"487","line":11,"column":6,"nodeType":"450","endLine":11,"endColumn":8,"suggestions":"526"},{"ruleId":"489","severity":1,"message":"490","line":61,"column":10,"nodeType":"491","messageId":"492","endLine":61,"endColumn":15},{"ruleId":"453","severity":1,"message":"484","line":1,"column":27,"nodeType":"455","messageId":"456","endLine":1,"endColumn":35},{"ruleId":"448","severity":1,"message":"493","line":12,"column":4,"nodeType":"450","endLine":12,"endColumn":6,"suggestions":"527"},{"ruleId":"444","severity":1,"message":"447","line":75,"column":11,"nodeType":"446","endLine":75,"endColumn":57},{"ruleId":"448","severity":1,"message":"495","line":12,"column":8,"nodeType":"450","endLine":12,"endColumn":10,"suggestions":"528"},{"ruleId":"453","severity":1,"message":"484","line":1,"column":26,"nodeType":"455","messageId":"456","endLine":1,"endColumn":34},{"ruleId":"448","severity":1,"message":"497","line":12,"column":6,"nodeType":"450","endLine":12,"endColumn":8,"suggestions":"529"},{"ruleId":"453","severity":1,"message":"500","line":4,"column":8,"nodeType":"455","messageId":"456","endLine":4,"endColumn":10},{"ruleId":"453","severity":1,"message":"501","line":39,"column":15,"nodeType":"455","messageId":"456","endLine":39,"endColumn":18},{"ruleId":"453","severity":1,"message":"499","line":46,"column":20,"nodeType":"455","messageId":"456","endLine":46,"endColumn":24},{"ruleId":"453","severity":1,"message":"478","line":1,"column":17,"nodeType":"455","messageId":"456","endLine":1,"endColumn":26},{"ruleId":"453","severity":1,"message":"454","line":1,"column":38,"nodeType":"455","messageId":"456","endLine":1,"endColumn":44},{"ruleId":"453","severity":1,"message":"502","line":21,"column":10,"nodeType":"455","messageId":"456","endLine":21,"endColumn":15},{"ruleId":"453","severity":1,"message":"503","line":21,"column":17,"nodeType":"455","messageId":"456","endLine":21,"endColumn":25},{"ruleId":"444","severity":1,"message":"447","line":83,"column":9,"nodeType":"446","endLine":83,"endColumn":33},{"ruleId":"444","severity":1,"message":"447","line":137,"column":21,"nodeType":"446","endLine":137,"endColumn":64},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["530"],["531"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'M' is defined but never used.",["532"],"React Hook useEffect has missing dependencies: 'refreshNotifications', 'token', 'updateHubId', and 'userId'. Either include them or remove the dependency array. If 'updateHubId' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["533"],"'assignee' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getIncidentById'. Either include it or remove the dependency array. If 'getIncidentById' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["534"],"React Hook useEffect has a missing dependency: 'allAssignees'. Either include it or remove the dependency array.",["535"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has a missing dependency: 'getAllAssignees'. Either include it or remove the dependency array. If 'getAllAssignees' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["536"],"'DayByDayCount' is defined but never used.","React Hook useEffect has missing dependencies: 'getNotifications' and 'userId'. Either include them or remove the dependency array. If 'getNotifications' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["537"],"React Hook useEffect has a missing dependency: 'setPageNumber'. Either include it or remove the dependency array. If 'setPageNumber' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["538"],"'dateDifference' is assigned a value but never used.","'useEffect' is defined but never used.","'moment' is defined but never used.","'socketIOClient' is defined but never used.","'history' is assigned a value but never used.","'deleteAttachment' is defined but never used.",["539"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getOldest5UnresolvedIncidents'. Either include it or remove the dependency array. If 'getOldest5UnresolvedIncidents' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["540"],"React Hook useEffect has a missing dependency: 'getMostAssignedToUsers'. Either include it or remove the dependency array. If 'getMostAssignedToUsers' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["541"],"no-dupe-keys","Duplicate key 'title'.","ObjectExpression","unexpected","React Hook useEffect has a missing dependency: 'getLast5IncidentsData'. Either include it or remove the dependency array. If 'getLast5IncidentsData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["542"],"React Hook useEffect has a missing dependency: 'getOverallWidgetData'. Either include it or remove the dependency array. If 'getOverallWidgetData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["543"],"React Hook useEffect has missing dependencies: 'getKPIData' and 'userId'. Either include them or remove the dependency array. If 'getKPIData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["544"],"'data' is assigned a value but never used.","'qs' is defined but never used.","'url' is assigned a value but never used.","'files' is assigned a value but never used.","'setFiles' is assigned a value but never used.","no-native-reassign",["545"],"no-negated-in-lhs",["546"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["547"],["548"],["549"],["550"],["551"],["552"],["553"],["554"],["555"],"eqeqeq","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'pageInformation' and 'setPageNumber'. Either include them or remove the dependency array. If 'setPageNumber' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["556"],"React Hook useEffect has a missing dependency: 'pageInformation'. Either include it or remove the dependency array.",["557"],["558"],["559"],["560"],["561"],["562"],{"desc":"563","fix":"564"},{"desc":"565","fix":"566"},{"desc":"565","fix":"567"},{"desc":"568","fix":"569"},{"desc":"570","fix":"571"},{"desc":"572","fix":"573"},{"desc":"574","fix":"575"},{"desc":"576","fix":"577"},{"desc":"578","fix":"579"},{"desc":"574","fix":"580"},{"desc":"581","fix":"582"},{"desc":"583","fix":"584"},{"desc":"585","fix":"586"},{"desc":"587","fix":"588"},{"desc":"589","fix":"590"},"no-global-assign","no-unsafe-negation",{"desc":"570","fix":"591"},{"desc":"572","fix":"592"},{"desc":"563","fix":"593"},{"desc":"565","fix":"594"},{"desc":"565","fix":"595"},{"desc":"574","fix":"596"},{"desc":"568","fix":"597"},{"desc":"576","fix":"598"},{"desc":"574","fix":"599"},{"desc":"600","fix":"601"},{"desc":"602","fix":"603"},{"desc":"581","fix":"604"},{"desc":"583","fix":"605"},{"desc":"585","fix":"606"},{"desc":"587","fix":"607"},{"desc":"589","fix":"608"},"Update the dependencies array to be: [props]",{"range":"609","text":"610"},"Update the dependencies array to be: [PageNumber, PageSize, Search, props]",{"range":"611","text":"612"},{"range":"613","text":"612"},"Update the dependencies array to be: [refreshNotifications, token, updateHubId, userId]",{"range":"614","text":"615"},"Update the dependencies array to be: [getIncidentById, match.params.id]",{"range":"616","text":"617"},"Update the dependencies array to be: [allAssignees, incidentData]",{"range":"618","text":"619"},"Update the dependencies array to be: [getAllAssignees]",{"range":"620","text":"621"},"Update the dependencies array to be: [getNotifications, userId]",{"range":"622","text":"623"},"Update the dependencies array to be: [search, setPageNumber]",{"range":"624","text":"625"},{"range":"626","text":"621"},"Update the dependencies array to be: [getOldest5UnresolvedIncidents]",{"range":"627","text":"628"},"Update the dependencies array to be: [getMostAssignedToUsers]",{"range":"629","text":"630"},"Update the dependencies array to be: [getLast5IncidentsData]",{"range":"631","text":"632"},"Update the dependencies array to be: [getOverallWidgetData]",{"range":"633","text":"634"},"Update the dependencies array to be: [getKPIData, userId]",{"range":"635","text":"636"},{"range":"637","text":"617"},{"range":"638","text":"619"},{"range":"639","text":"610"},{"range":"640","text":"612"},{"range":"641","text":"612"},{"range":"642","text":"621"},{"range":"643","text":"615"},{"range":"644","text":"623"},{"range":"645","text":"621"},"Update the dependencies array to be: [pageInformation, search, setPageNumber]",{"range":"646","text":"647"},"Update the dependencies array to be: [currentPage, currentSize, TotalRecords, pageInformation]",{"range":"648","text":"649"},{"range":"650","text":"628"},{"range":"651","text":"630"},{"range":"652","text":"632"},{"range":"653","text":"634"},{"range":"654","text":"636"},[746,748],"[props]",[1135,1165],"[PageNumber, PageSize, Search, props]",[807,837],[968,970],"[refreshNotifications, token, updateHubId, userId]",[1835,1852],"[getIncidentById, match.params.id]",[2455,2469],"[allAssignees, incidentData]",[1738,1740],"[getAllAssignees]",[984,986],"[getNotifications, userId]",[944,952],"[search, setPageNumber]",[601,603],[423,425],"[getOldest5UnresolvedIncidents]",[400,402],"[getMostAssignedToUsers]",[384,386],"[getLast5IncidentsData]",[454,456],"[getOverallWidgetData]",[345,347],"[getKPIData, userId]",[1835,1852],[2455,2469],[746,748],[1135,1165],[807,837],[1738,1740],[968,970],[984,986],[601,603],[1624,1632],"[pageInformation, search, setPageNumber]",[1699,1739],"[currentPage, currentSize, TotalRecords, pageInformation]",[423,425],[400,402],[384,386],[454,456],[345,347]]